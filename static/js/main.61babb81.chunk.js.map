{"version":3,"sources":["assets/util.js","components/FileModal.jsx","components/Toolbar.jsx","components/JsonEditor.jsx","components/ElementSelector.jsx","components/DataEditor.jsx","components/StyleEditor.jsx","assets/defaults.js","components/LayoutEditor.jsx","components/Editor.jsx","assets/initCy.js","components/Graph.jsx","index.js"],"names":["uuid","replace","c","exp","crypto","getRandomValues","Uint8Array","toString","updateSelector","selector","style","valid","Object","keys","forEach","k","window","cy","parse","s","i","length","values","inputText","index","getSelectorIndex","properties","mappedProperties","oldLength","css","_private","newStyle","EH_CLASSES","HIDDEN_SELECTORS","DEFAULT_SELECTORS","CLASS_REG","getElements","elements","filter","ele","a","classes","b","value","includes","collection","downloadFile","data","name","text","JSON","stringify","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","EH_NODES","getClassSuggestions","allClasses","Set","item","add","Array","from","getClassesUnion","json","sel","more","match","map","substring","FileImporter","state","invalid","feedback","fileSelected","evt","files","target","console","log","content","setState","isArray","handleLoad","preventDefault","form","f","this","Form","onSubmit","Group","File","id","custom","Input","isValid","isInvalid","onChange","Label","Control","Feedback","Button","className","disabled","React","Component","FileExporter","setType","setStyle","save","handleTypeChange","controlId","as","FileModal","handleClose","Modal","show","onHide","Card","Header","closeButton","Title","Body","ListGroup","variant","Item","search","event","query","getElementById","startBatch","deselect","$","select","fit","endBatch","Toolbar","useState","fileModalVisible","setFileModalVisible","toggleFileModal","Navbar","bg","Brand","Nav","ButtonGroup","onClick","inline","FormControl","placeholder","MODES","JsonEditor","forwardRef","props","ref","allowedModes","extraModes","ace","htmlElementProps","height","theme","sortObjectKeys","history","ElementSelector","selected","selectionChanged","undefined","multiSelectChanged","selectedItems","on","removeListener","items","group","source","label","sort","elementsToItems","el","popover","Popover","Content","showSelectedItems","showSelectedItemsSearch","showSearch","showSelectAll","withGrouping","InputGroup","Append","OverlayTrigger","trigger","placement","overlay","LOCKED_DATA","autocomplete","caseSensitive","getOptions","path","input","editor","field","options","fields","DataEditor","componentDidMount","current","jsonEditor","set","onJsonChange","get","onEditable","node","onSelectionChange","onClassesChange","newValue","labels","v","onCreate","addClass","classItems","cls","createRef","classSuggestions","selectedClasses","x","hasClass","getClassesIntersection","ListGroupItem","isMulti","isDisabled","isClearable","onCreateOption","TYPE_OPTIONS","DEFAULT_COLORS","getSuggestions","enums","number","color","autocompleteStyle","defaultValue","getDefaultProperty","strValue","p","propertyNames","getStyle","styles","NewSelectorModal","selectorInput","setFeedback","existing","invalidated","err","warning","appendFromJson","addStyle","autoFocus","Text","rel","StyleEditor","setSelector","handleDropdownAction","action","newSelectorModal","fromJson","update","styleChanged","errors","onValidate","push","handleModalClose","selectors","key","Dropdown","onSelect","e","Toggle","split","Menu","eventKey","LAYOUTS","DEFAULT_LAYOUTS","STYLESHEET","NewLayoutModal","layoutInput","LayoutEditor","setLayout","layout","params","newLayoutModal","layoutChanged","newLayout","apply","run","Editor","tabChange","tab","toggle","hidden","render","icon","faCog","paddingTop","activeKey","tabs","n","Link","aria-label","aria-hidden","width","minConstraints","maxConstraints","NODE_NUM","initCy","eh_defaults","preview","hoverDelay","noEdgeEventsInDraw","complete","t","added","edgeParams","edgehandles","setTimeout","addNode","renderedPosition","y","cytoscape","use","Graph","stylesheet","App","ReactDOM"],"mappings":"oTAEaA,EAAO,WAChB,OAAQ,CAAC,MAAQ,KAAKC,QAAQ,UAAU,SAAAC,GACpC,IAAIC,EAAqD,GAA/CC,OAAOC,gBAAgB,IAAIC,WAAW,IAAI,GAGpD,OADYJ,GADZC,IAAcD,EAAI,IAEPK,SAAS,QAmBfC,EAAiB,SAACC,EAAUC,GACrC,IAAIC,GAAQ,EAOZ,GANAC,OAAOC,KAAKH,GAAOI,SAAQ,SAAAC,GACbC,OAAOC,GAAGP,QAAQQ,MAAMH,EAAGL,EAAMK,MAEvCJ,GAAQ,MAGXA,EAAL,CAIA,IAAMQ,EAAIH,OAAOC,GAAGP,QAChBU,EA3BiB,SAACX,GACtB,IACIW,EADMJ,OAAOC,GAAGP,QACVW,OAAS,EASnB,OARAT,OAAOU,OAAON,OAAOC,GAAGP,SAASI,SAAQ,SAAAK,GAChCA,EAAEV,UAGHU,EAAEV,SAASc,YAAcd,IACzBW,EAAID,EAAEK,UAGPJ,EAgBCK,CAAiBhB,GAEzBU,EAAEC,GAAGM,WAAa,GAClBP,EAAEC,GAAGO,iBAAmB,GAGxB,IAAMC,EAAYT,EAAEE,OAMpB,OALAF,EAAEE,OAASD,EAAI,EACfD,EAAEU,IAAInB,GACNS,EAAEE,OAASO,EACXT,EAAEW,SAASC,UAAW,EAEfZ,IAWEa,EAAa,CACtB,YAGA,aAEA,gBACA,gBACA,WACA,wBACA,qBAESC,EAAmB,CAC5B,aACA,YACA,aACA,aACA,8BACA,oCAESC,EAAoB,CAC7B,OACA,QAGEC,EAAY,mCAGLC,EAAc,SAAC3B,GACxB,IAAI4B,EAAWrB,OAAOC,GAAGoB,SAAS5B,GAAY,IAI9C,OAHA4B,EAAWA,EAASC,QAAO,SAAAC,GACvB,OAA+D,KAvCrCC,EAuCDD,EAAIE,UAvCAC,EAuCWV,EAtCrCQ,EAAEF,QAAO,SAAAK,GAAK,OAAID,EAAEE,SAASD,OAsCoBtB,OAvC3B,IAACmB,EAAGE,KAyC1B1B,OAAOC,GAAG4B,WAAWR,IAKnBS,EAAe,SAACC,EAAMC,GAC/B,IAAMC,EAAOC,KAAKC,UAAUJ,EAAM,KAAM,GAClCK,EAAUC,SAASC,cAAc,KACjCC,EAAO,IAAIC,KACb,CAACP,GAAO,CAAEQ,KAAM,oBACpBL,EAAQM,KAAOC,IAAIC,gBAAgBL,GACnCH,EAAQS,SAAWb,EAAO,QAC1BK,SAASS,KAAKC,YAAYX,GAC1BA,EAAQY,SAsBNC,EAAW,CAAC,aAAc,aAAc,aACjCC,EAAsB,WAC/B,IAAIC,EArBuB,SAAC9B,GAC5B,IAAII,EAAU,IAAI2B,IAIlB,OAHA/B,EAASvB,SAAQ,SAACyB,EAAKnB,GACnBmB,EAAIE,UAAU3B,SAAQ,SAAAuD,GAAI,OAAI5B,EAAQ6B,IAAID,SAEvCE,MAAMC,KAAK/B,GAgBDgC,CAAgBrC,KAYjC,OAXApB,OAAOC,GAAGP,QAAQgE,OAAO5D,SAAQ,SAAAK,GAC7B,IAAMwD,EAAMxD,EAAEV,SACd,IAAIwD,EAASrB,SAAS+B,GAAtB,CAGA,IAAIC,EAAOD,EAAIE,MAAM1C,GACjByC,GAAQA,EAAKvD,OAAS,IACtBuD,EAAOA,EAAKE,KAAI,SAAA3D,GAAC,OAAIA,EAAE4D,UAAU,MAAIzC,QAAO,SAAAnB,GAAC,OAAKa,EAAWY,SAASzB,MACtEgD,EAAU,sBAAOA,GAAP,YAAsBS,SAGjCT,GCvILa,E,4MACFC,MAAQ,CACJC,SAAS,EACTC,SAAU,I,EAGdC,aAAe,SAACC,GACZ,IAAMC,EAAQD,EAAIE,OAAOD,MACzB,GAAqB,IAAjBA,EAAMjE,OACN,OAAO,EAEX,IAAMkC,EAAO+B,EAAM,GACnBE,QAAQC,IAAIlC,EAAKP,MACjB,IAAID,EAAO,GACX,IACIA,EAAOG,KAAKhC,MAAMqC,EAAKmC,SACzB,SAKE,YAJA,EAAKC,SAAS,CACVT,SAAS,EACTC,SAAS,mBAAD,OAAqB5B,EAAKP,KAA1B,eAIhB,IAAIS,EAAO,WACPc,MAAMqB,QAAQ7C,GACV,aAAcA,EAAK,KACnBU,EAAO,SAGP,aAAcV,IACdU,EAAO,SAIf,EAAKkC,SAAS,CACVT,SAAS,EACTC,SAAS,UAAD,OAAY5B,EAAKP,KAAjB,eAA4BS,M,EAI5CoC,WAAa,SAACR,GACVA,EAAIS,iBACJ,IAAMC,EAAOV,EAAIE,OAAOQ,KACxB/E,OAAOgF,EAAID,EACXP,QAAQC,IAAIM,I,uDAGN,IAAD,EAIDE,KAAKhB,MAFLC,EAFC,EAEDA,QACAC,EAHC,EAGDA,SAEJ,OACI,kBAACe,EAAA,EAAD,CAAMC,SAAUF,KAAKJ,YACjB,kBAACK,EAAA,EAAKE,MAAN,KACI,kBAACF,EAAA,EAAKG,KAAN,CAAWC,GAAG,uBAAuBC,QAAM,GACvC,kBAACL,EAAA,EAAKG,KAAKG,MAAX,CACIC,QAAStB,IAAaD,EACtBwB,UAAWxB,EACXyB,SAAUV,KAAKb,eACnB,kBAACc,EAAA,EAAKG,KAAKO,MAAX,gCAGCzB,GACG,kBAACe,EAAA,EAAKW,QAAQC,SAAd,CAAuBrD,KAAMyB,EAAU,UAAY,SAC9CC,KAKjB,kBAAC4B,EAAA,EAAD,CAAQC,UAAU,cAAcC,SAAU/B,IAAYC,EAAU1B,KAAK,UAArE,a,GAtEWyD,IAAMC,WA4E3BC,E,4MACFnC,MAAQ,CACJxB,KAAM,Y,EAGV4D,QAAU,SAAC5D,GACP,EAAKkC,SAAS,CAAClC,U,EAEnB6D,SAAW,SAAC5G,GACR,EAAKiF,SAAS,CAACjF,W,EAGnB6G,KAAO,SAAClC,GACJA,EAAIS,iBADQ,IAGRrC,EACA,EAAKwB,MADLxB,KAEAV,EAAO,GACE,aAATU,EACAV,EAAO/B,OAAOC,GAAGoB,WAAWqC,OACb,UAATjB,IACNV,EAAO/B,OAAOC,GAAGP,QAAQgE,QAE7B5B,EAAaC,EAAMU,I,EAGvB+D,iBAAmB,SAACnC,GAChB,IAAM5B,EAAO4B,EAAIE,OAAO5C,MACxB,EAAKgD,SAAS,CAAClC,U,uDAIf,OACI,kBAACyC,EAAA,EAAD,CAAMC,SAAUF,KAAKsB,MACjB,kBAACrB,EAAA,EAAKE,MAAN,CAAYqB,UAAU,8BAClB,kBAACvB,EAAA,EAAKU,MAAN,oBACA,kBAACV,EAAA,EAAKW,QAAN,CAAca,GAAG,SAAS1E,KAAK,OAAO2D,SAAUV,KAAKuB,kBACjD,4BAAQ7E,MAAM,YAAd,YACA,4BAAQA,MAAM,SAAd,WAGR,kBAACoE,EAAA,EAAD,CAAQC,UAAU,cAAcvD,KAAK,UAArC,e,GAzCWyD,IAAMC,WAsElBQ,EArBG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACjB,OACI,kBAACC,EAAA,EAAD,CAAOC,MAAM,EAAMC,OAAQH,EAAaF,GAAIM,KACxC,kBAACH,EAAA,EAAMI,OAAP,CAAcP,GAAG,KAAKQ,aAAW,GAC7B,kBAACL,EAAA,EAAMM,MAAP,yCAEJ,kBAACN,EAAA,EAAMO,KAAP,KACI,kBAACC,EAAA,EAAD,CAAWC,QAAQ,SACf,kBAACD,EAAA,EAAUE,KAAX,KACI,kBAAC,EAAD,OAEJ,kBAACF,EAAA,EAAUE,KAAX,KACI,kBAAC,EAAD,WCxIlBC,EAAS,SAACC,GACZA,EAAM3C,iBACN,IAAM4C,EAAQrF,SAASsF,eAAe,SACtC3H,OAAOC,GAAG2H,aACV5H,OAAOC,GAAGoB,WAAWwG,WACrB7H,OAAOC,GAAG6H,EAAEJ,EAAM/F,OAAOoG,SACzB/H,OAAOC,GAAG+H,MACVhI,OAAOC,GAAGgI,YA0BCC,EAvBC,WAAO,IAAD,EAC8BC,oBAAS,GADvC,mBACXC,EADW,KACOC,EADP,KAEZC,EAAkB,WACpBD,GAAqBD,IAGzB,OACI,oCACCA,GAAoB,kBAAC,EAAD,CAAWxB,YAAa0B,IAC7C,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOlB,QAAQ,QACtB,kBAACiB,EAAA,EAAOE,MAAR,iBACA,kBAACC,EAAA,EAAD,CAAK1C,UAAU,UAAUU,GAAIiC,KACzB,kBAAC5C,EAAA,EAAD,CAAQuB,QAAQ,iBAAiBsB,QAASN,GAA1C,QACA,kBAACvC,EAAA,EAAD,CAAQuB,QAAQ,iBAAiBsB,QAAS,kBAAM5I,OAAOC,GAAG+H,QAA1D,QAEJ,kBAAC9C,EAAA,EAAD,CAAM2D,QAAM,EAAC1D,SAAUqC,GACnB,kBAACsB,EAAA,EAAD,CAAarG,KAAK,OAAO6C,GAAG,QAAQyD,YAAY,SAAS/C,UAAU,gB,oHC7B7EgD,G,cAAQ,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,SAkBhCC,EAhBI/C,IAAMgD,YAAW,SAACC,EAAOC,GACxC,IAAMC,EAAY,UAAOL,EAAP,YAAkBG,EAAMG,YAAc,KACxD,OACI,kBAAC,IAAD,eACIF,IAAKA,EACLG,IAAKA,IACLF,aAAcA,EACdG,iBAAkB,CAAC9J,MAAO,CAAC+J,OAAQ,SACnCC,MAAM,mBACNC,gBAAc,EACdC,SAAO,GACHT,O,6CCeKU,I,mNACjB5F,MAAQ,CACJ6F,SAAU,I,EAYdC,iBAAmB,SAACtC,EAAOqC,QACNE,IAAbF,IACAA,EAAW1I,EAAY,cAE3B,EAAKuD,SAAS,CAACmF,aACf,EAAKX,MAAMxD,SAASmE,I,EAGxBG,mBAAqB,SAACC,GAClB,IAAM7I,EAAWrB,OAAOC,GAAG4B,WAAWqI,EAAcpG,KAAI,SAAAvC,GAAG,OAAIA,EAAIa,YAEnEpC,OAAOC,GAAG2H,aACV5H,OAAOC,GAAGoB,WAAWwG,WACrBxG,EAAS0G,SACT/H,OAAOC,GAAGgI,WAEV,EAAK8B,iBAAiB,KAAM1I,I,kEAxB5BrB,OAAOC,GAAGkK,GAAG,kBAAmBlF,KAAK8E,oB,6CAGrC/J,OAAOC,GAAGmK,eAAe,kBAAmBnF,KAAK8E,oB,+BAyBjD,IACMM,EAzDU,SAAChJ,GACrB,IAAMgJ,EAAQhJ,EAASyC,KAAI,SAACvC,EAAKnB,GAC7B,IAAM4B,EAAOT,EAAIQ,KAAK,QACtB,GAAoB,UAAhBR,EAAI+I,QAAoB,CACxB,IAAMC,EAAShJ,EAAIgJ,SAASxI,KAAK,QAC3BwC,EAAShD,EAAIgD,SAASxC,KAAK,QACjC,MAAO,CACHuD,GAAIlF,EACJoK,MAAM,GAAD,OAAKD,EAAL,aAAgBvI,EAAhB,aAAyBuC,GAC9B+F,MAAO/I,EAAI+I,QACXlI,QAASb,GAGjB,MAAO,CACH+D,GAAIlF,EAAGoK,MAAOxI,EAAMsI,MAAO/I,EAAI+I,QAASlI,QAASb,MAIzD,OADA8I,EAAMI,MAAK,SAACjJ,EAAGE,GAAJ,OAAUF,EAAEQ,KAAON,EAAEM,QACzBqI,EAuCWK,CADGtJ,KAEX8I,EAAgBG,EAAM/I,QAAO,SAAAqJ,GAAE,OAAIA,EAAGvI,QAAQ0H,cAC9Cc,EACF,kBAACC,GAAA,EAAD,KACI,kBAACA,GAAA,EAAQC,QAAT,KACA,kBAAC,KAAD,CACIT,MAAOA,EACPU,mBAAmB,EACnBC,yBAAyB,EACzBC,YAAY,EACZC,eAAe,EACfhB,cAAeA,EACfiB,cAAY,EACZxF,SAAUV,KAAKgF,uBAK3B,OACI,kBAACmB,GAAA,EAAD,KACI,kBAACtC,EAAA,EAAD,CACI7C,UAAQ,EACR8C,YAAY,SACZpH,MAAK,UAAKuI,EAAc7J,OAAnB,wBAET,kBAAC+K,GAAA,EAAWC,OAAZ,KACI,kBAACC,GAAA,EAAD,CAAgBC,QAAQ,QAAQC,UAAU,SAASC,QAASb,GACxD,kBAAC7E,EAAA,EAAD,sB,GA9DqBG,IAAMC,YC1B7CuF,GAAc,CAAC,KAAM,SAAU,UAE/BC,GAAe,CACjBrK,OAAQ,UACRiK,QAAS,QACTK,eAAe,EACfC,WAAY,SAAC5J,EAAM6J,EAAMC,EAAOC,GAC5B,GAAc,UAAVD,EAAmB,CACnB,IAAME,EAAQH,EAAK,GACfI,EAAU,IAAI9I,IASlB,OAPApD,OAAOC,GAAGoB,WAAWvB,SAAQ,SAAAyB,GACzB,IAAIpB,EAAIoB,EAAIQ,KAAKkK,GACjBzH,QAAQC,IAAItE,GACRA,GAAoB,kBAAPA,GACb+L,EAAQ5I,IAAInD,MAGboD,MAAMC,KAAK0I,GACf,GAAc,UAAVH,EAAmB,CAC1B,IAAII,EAAS,IAAI/I,IAIjB,OAHApD,OAAOC,GAAGoB,WAAWvB,SAAQ,SAAAyB,GACzB3B,OAAOC,KAAK0B,EAAIQ,QAAQjC,SAAQ,SAAAkC,GAAI,OAAImK,EAAO7I,IAAItB,SAEhDuB,MAAMC,KAAK2I,GAEtB,MAAO,KAIMC,G,kDAQjB,WAAYjD,GAAQ,IAAD,8BACf,cAAMA,IAOVkD,kBAAoB,WAChB,IAAMvC,EAAW1I,EAAY,aACvBW,EAAO+H,EAAShG,KAAI,SAAAT,GAAI,OAAIA,EAAKtB,UACvC,EAAKiK,OAAOM,QAAQC,WAAWC,IAAIzK,GACnC,EAAK4C,SAAS,CAAEmF,cAZD,EAenB2C,aAAe,WACG,EAAKT,OAAOM,QAAQC,WAAWG,MACvC5M,SAAQ,SAAAiC,GACE/B,OAAOC,GAAG6H,EAAE,IAAM/F,EAAKuD,IAC/BvD,KAAKA,OAnBE,EAuBnB4K,WAAa,SAACC,GACV,OAAIA,EAAKd,MAA6B,IAArBc,EAAKd,KAAKzL,SACfqL,GAAY9J,SAASgL,EAAKX,QAzBvB,EA8BnBY,kBAAoB,SAAC/C,GACjB,IAAM/H,EAAO+H,EAAShG,KAAI,SAAAT,GAAI,OAAIA,EAAKtB,UACvC,EAAKiK,OAAOM,QAAQC,WAAWC,IAAIzK,GACnC,EAAK4C,SAAS,CAAEmF,cAjCD,EAoCnBgD,gBAAkB,SAACC,GAAc,IAEzBjD,EACA,EAAK7F,MADL6F,SAEAkD,EAAS,GACTD,IACAC,EAASD,EAASjJ,KAAI,SAAAmJ,GAAC,OAAIA,EAAC,UAEhCnD,EAASrI,QAAQuL,GAEjB,EAAKrI,SAAS,EAAKV,QA9CJ,EAiDnBiJ,SAAW,SAACH,GAGJ,EAAK9I,MADL6F,SAEKqD,SAAS,CAACJ,IAEnB,EAAKpI,SAAS,EAAKV,QAvDJ,EA0DnBmJ,WAAa,SAAC3L,GACV,OAAOA,EAAQqC,KAAI,SAAAuJ,GAAS,MAAO,CAAE1L,MAAO0L,EAAK7C,MAAO6C,OAzDxD,EAAKpJ,MAAQ,CACT6F,SAAU9J,OAAOC,GAAG4B,cAExB,EAAKmK,OAASsB,sBALC,E,qDA8DT,IAEFxD,EACA7E,KAAKhB,MADL6F,SAEAyD,EAAmBrK,IACnBsK,ELK0B,SAACnM,GACnC,IAAII,EAAU,IAAI2B,IAQlB,OAPA/B,EAASvB,SAAQ,SAACyB,EAAKnB,GAEfqB,EADM,IAANrB,EACU,IAAIgD,IAAI7B,EAAIE,WAEZ,YAAIA,GAASH,QAAO,SAAAmM,GAAC,OAAIlM,EAAImM,SAASD,SAGjDlK,MAAMC,KAAK/B,GKdQkM,CAAuBvM,EAAY,cAGzD,OAFAmM,EAAmBtI,KAAKmI,WAAWG,GACnCC,EAAkBvI,KAAKmI,WAAWI,GAE9B,kBAACnG,EAAA,EAAD,CAAW3H,MAAO,CAAE+J,OAAQ,SACxB,kBAACmE,EAAA,EAAD,KACI,kBAAC,GAAD,CACIjI,SAAUV,KAAK4H,qBAEvB,kBAACe,EAAA,EAAD,KACI,kBAAC,IAAD,CACIC,SAAO,EACPC,WAAgC,IAApBhE,EAASzJ,OACrB0N,aAAW,EACXpI,SAAUV,KAAK6H,gBACfkB,eAAgB/I,KAAKiI,SACrBhB,QAASqB,EACT5L,MAAO6L,KAGf,kBAACI,EAAA,EAAD,CAAelO,MAAO,CAAE+J,OAAQ,SAC5B,kBAAC,EAAD,CACIL,IAAKnE,KAAK+G,OACVW,WAAY1H,KAAK0H,WACjBhH,SAAUV,KAAKwH,aACfd,aAAcA,W,GApGEzF,IAAMC,W,kBCzB1C8H,GAAe,KAYbC,GAAiB,CACnB,MACA,SACA,SACA,QACA,OACA,SACA,QACA,QACA,OACA,OACA,UACA,CAAC,IAAK,GAAI,GAAI,KACd,WAEEC,GAAiB,SAAC1L,GACpB,OAAKA,EAGDA,EAAK2L,MACE3L,EAAK2L,MAEZ3L,EAAK4L,OACE,CAAC,GAER5L,EAAK6L,MACEJ,GAEJ,GAXI,IAcTK,GAAoB,CACtBjN,OAAQ,UACRiK,QAAS,QACTK,eAAe,EACfC,WAAY,SAAC5J,EAAM6J,EAAMC,EAAOC,GAC5B,GAAc,UAAVD,EAAmB,CACnB,IAAME,EAAQH,EAAK,GACfI,EAAU,IAAI9I,IAEdoL,EAAexO,OAAOC,GAAGP,QAAQ+O,mBAAmBxC,GAYxD,YAXqBjC,IAAjBwE,IACAtC,EAAQ5I,IAAIkL,EAAaE,UACzBxC,EAAQ5I,IAAIkL,EAAa7M,SArDjBK,EAwDGiK,EAvDF,OAAjBgC,KACAA,GAAe,GACfjO,OAAOC,GAAGP,QAAQgB,WAAWZ,SAAQ,SAAA6O,GACjCV,GAAaU,EAAE3M,MAAQ2M,EAAElM,SAG1B0L,GAAeF,GAAajM,KAiDLlC,SAAQ,SAAAkC,GAAI,OAAIkK,EAAQ5I,IAAItB,MAGlDhC,OAAOC,GAAGoB,WAAWvB,SAAQ,SAAAyB,GACzB2K,EAAQ5I,IAAI/B,EAAI7B,MAAMuM,OAEnB1I,MAAMC,KAAK0I,GACf,MAAc,UAAVH,EACA/L,OAAOC,GAAGP,QAAQkP,cAEtB,GAlEQ,IAAC5M,IAiFlB6M,GAAW,SAACpP,GACd,IAAMqP,EAAS9O,OAAOC,GAAGP,QAAQgE,OAAOpC,QAAO,SAAAnB,GAAC,OAAIA,EAAEV,WAAaA,KACnE,OAAIqP,EAAOzO,OAAS,EACTyO,EAAO,GAAGpP,MAEd,IAGLqP,GAAmB,SAAC,GAAyC,IAAvCP,EAAsC,EAAtCA,aAAc5H,EAAwB,EAAxBA,YAAaE,EAAW,EAAXA,KAC7CkI,EAAgB1B,sBADwC,EAE9BnF,mBAAS,IAFqB,mBAEvDhE,EAFuD,KAE7C8K,EAF6C,KAGxDC,EAAWlP,OAAOC,GAAGP,QAAQgE,OAAOI,KAAI,SAAA3D,GAAC,OAAIA,EAAEV,YAkBrD,OACI,kBAACoH,EAAA,EAAD,CAAOC,KAAMA,EAAMC,OAAQH,GACvB,kBAACC,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACrB,kBAACL,EAAA,EAAMM,MAAP,2BAEJ,kBAACN,EAAA,EAAMO,KAAP,KACI,kBAAClC,EAAA,EAAD,CAAMiK,YAAahL,EAAUgB,SAtBxB,SAACd,GACdA,EAAIS,iBACJ,IAAM9C,EAAOgN,EAAc1C,QAAQ3K,MACnC,GAAIuN,EAAStN,SAASI,GAClBiN,EAAY,6CADhB,CAIA,IACMG,EAhCG,SAAC3P,EAAUC,GACxB,IAAI2P,EAAU,GAOd,OANKnP,KAAMA,MAAMT,KACb4P,EAAO,WAAO5P,EAAP,+BAEN4P,GACDrP,OAAOC,GAAGP,QAAQ4P,eAAe,CAAC,CAAE7P,WAAUC,WAE3C2P,EAwBSE,CAASvN,EADP6M,GAASL,IAEnBY,EACAH,EAAY,UAAD,OAAWG,IAEtBxI,EAAYvC,EAAKrC,MAWT,kBAACkD,EAAA,EAAKE,MAAN,CAAYoK,WAAS,EAAC/I,UAAU,kBAC5B,kBAACvB,EAAA,EAAKU,MAAN,uBACA,kBAACwF,GAAA,EAAD,CAAYpF,UAAU,QAClB,kBAAC8C,EAAA,EAAD,CAAapD,UAAwB,KAAbvB,EAAiBiF,IAAK4F,EAAeR,aAAcA,EAAczF,YAAY,kBACrG,kBAACqC,GAAA,EAAWC,OAAZ,KACI,kBAACtF,EAAA,EAAD,CAAQtD,KAAK,UAAb,WAEJ,kBAACyC,EAAA,EAAKW,QAAQC,SAAd,CAAuBrD,KAAK,WACvB0B,IAGT,kBAACe,EAAA,EAAKuK,KAAN,CAAWzJ,UAAU,cAArB,gDAEI,uBAAGzB,OAAO,SAASmL,IAAI,sBAAsBhN,KAAK,uCAAlD,mBAQPiN,G,kDAEjB,WAAYxG,GAAQ,IAAD,8BACf,cAAMA,IAUVkD,kBAAoB,WAChB,EAAKuD,YAAY,EAAK3L,MAAMxE,WAZb,EAenBmQ,YAAc,SAACnQ,GACX,IAAMC,EAAQmP,GAASpP,GACvB,EAAKuM,OAAOM,QAAQC,WAAWC,IAAI9M,GACnC,EAAKiF,SAAS,CAAElF,cAlBD,EAqBnBoQ,qBAAuB,SAACpI,GAAW,IAE3BhI,EACA,EAAKwE,MADLxE,SAEAqQ,EAASrI,EACTA,EAAMlD,SACNuL,EAASrI,EAAMlD,OAAO5C,OAE1B,IAAIoO,EAAmB,GACvB,GAAe,QAAXD,EACAC,EAAgB,MAAW,OACxB,GAAe,SAAXD,EACPC,EAAgB,MAAW,EAC3BA,EAAgB,aAAmBtQ,OAChC,GAAe,WAAXqQ,EAAqB,CAC5B,IAAMhB,EAAS9O,OAAOC,GAAGP,QAAQgE,OAAOpC,QAAO,SAAAnB,GAAC,OAAIA,EAAEV,WAAaA,KACnEO,OAAOC,GAAGP,QAAQsQ,SAASlB,GAAQmB,SACnC,EAAKtL,SAAS,CAAElF,SAAU,SAE9B,EAAKkF,SAAS,CAAEoL,sBAxCD,EA2CnBG,aAAe,SAACzI,GACZ,EAAKmI,YAAYnI,EAAMlD,OAAO5C,QA5Cf,EA+CnBgE,SAAW,SAAC5E,GAAc,IAElBtB,EACA,EAAKwE,MADLxE,SAEuB,IAAvB,EAAK0Q,OAAO9P,QACZb,EAAeC,EAAUsB,GAAUkP,UApDxB,EAwDnBG,WAAa,SAAC1M,GACV,IAAIyM,EAAS,GASb,OAPAvQ,OAAOC,KAAK6D,GAAM5D,SAAQ,SAAAC,GACZC,OAAOC,GAAGP,QAAQQ,MAAMH,EAAG2D,EAAK3D,KAEtCoQ,EAAOE,KAAK,CAAEvE,KAAM,CAAC/L,GAAI,QAAW,yBAG5C,EAAKoQ,OAASA,EACPA,GAlEQ,EAqEnBG,iBAAmB,SAACjM,EAAKrC,GACrB,IAAMtC,EAAQmP,GAAS7M,GACvB,EAAKgK,OAAOM,QAAQC,WAAWC,IAAI9M,GACnC,EAAKiF,SAAS,CACVlF,SAAUuC,EACV+N,iBAAkB,QAxEtB,EAAK/D,OAASsB,sBACd,EAAKrJ,MAAQ,CACTxE,SAAU,OACVsQ,iBAAkB,MAEtB/P,OAAOgM,OAAS,EAAKA,OACrB,EAAKmE,OAAS,GARC,E,qDA8ET,IAAD,SAIDlL,KAAKhB,MAFLxE,EAFC,EAEDA,SACAsQ,EAHC,EAGDA,iBAGEQ,EAAYvQ,OAAOC,GAAGP,QAAQgE,OAC/BpC,QAAO,SAAAnB,GAAC,OAAKc,EAAiBW,SAASzB,EAAEV,aAE9C,OACI,kBAAC4H,EAAA,EAAD,CAAW3H,MAAO,CAAE+J,OAAQ,SACxB,kBAAC,GAAD,eACI7C,YAAa3B,KAAKqL,kBACdP,IAER,kBAACnC,EAAA,EAAD,KACI,kBAACxC,GAAA,EAAD,KACI,kBAAClG,EAAA,EAAKW,QAAN,CACIP,GAAG,iBACHoB,GAAG,SACHqC,YAAY,QACZpH,MAAOlC,EACPkG,SAAUV,KAAKiL,cACdK,EAAUzM,KAAI,SAAA3D,GACX,OACI,4BACIqQ,IAAKrQ,EAAEV,SACPkC,MAAOxB,EAAEV,UACRU,EAAEV,cAInB,kBAACgR,GAAA,EAAD,CAAU/J,GAAI0E,KAAWC,OAAQqF,SAAUzL,KAAK4K,sBAC5C,kBAAC9J,EAAA,EAAD,CAAQ6C,QAAS,SAAA+H,GAAC,OAAI,EAAKd,qBAAqB,SAAhD,OACA,kBAACY,GAAA,EAASG,OAAV,CAAiBC,OAAK,IACtB,kBAACJ,GAAA,EAASK,KAAV,KACI,kBAACL,GAAA,EAASlJ,KAAV,CAAewJ,SAAS,QAAxB,QACA,kBAACN,GAAA,EAASlJ,KAAV,CAAetB,SAAU/E,EAAkBU,SAASnC,GAAWsR,SAAS,UAAxE,cAKhB,kBAACnD,EAAA,EAAD,CAAelO,MAAO,CAAE+J,OAAQ,SAC5B,kBAAC,EAAD,CACIL,IAAKnE,KAAK+G,OACVoE,WAAYnL,KAAKmL,WACjBzK,SAAUV,KAAKU,SACfgG,aAAc4C,W,GA/HGrI,IAAMC,WCxJlC6K,GAAU,CACrB,KAAQ,CAAEhP,KAAM,QAChB,OAAU,CAAEA,KAAM,UAClB,WAAc,CAAEA,KAAM,cACtB,OAAU,CAAEA,KAAM,UAClB,OAAU,CAAEA,KAAM,UAClB,aAAgB,CAAEA,KAAM,gBACxB,KAAQ,CAAEA,KAAM,SAGLiP,GAAkB,CAC7B,OACA,SACA,aACA,SACA,SACA,eACA,QAGWC,GAAa,CACxB,CACEzR,SAAU,OACVC,MAAO,IAET,CACED,SAAU,OACVC,MAAO,CACL,cAAe,SACf,qBAAsB,aAG1B,CACED,SAAU,aACVC,MAAO,CACL,QAAW,aACX,cAAe,WAKnB,CACED,SAAU,aACVC,MAAO,CACL,mBAAoB,MACpB,MAAS,GACT,OAAU,GACV,MAAS,UACT,kBAAmB,EACnB,eAAgB,GAChB,iBAAkB,IAItB,CACED,SAAU,YACVC,MAAO,CACL,mBAAoB,QAIxB,CACED,SAAU,aACVC,MAAO,CACL,eAAgB,EAChB,eAAgB,QAIpB,CACED,SAAU,aACVC,MAAO,CACL,eAAgB,EAChB,eAAgB,QAIpB,CACED,SAAU,8BACVC,MAAO,CACL,mBAAoB,MACpB,aAAc,MACd,qBAAsB,MACtB,qBAAsB,QAI1B,CACED,SAAU,mCACVC,MAAO,CACL,QAAW,KC9EXyR,GAAiB,SAAC,GAAyC,IAAvC3C,EAAsC,EAAtCA,aAAc5H,EAAwB,EAAxBA,YAAaE,EAAW,EAAXA,KAC3CsK,EAAc9D,sBADwC,EAE5BnF,mBAAS,IAFmB,mBAErDhE,EAFqD,KAE3C8K,EAF2C,KAe5D,OACI,kBAACpI,EAAA,EAAD,CAAOC,KAAMA,EAAMC,OAAQH,GACvB,kBAACC,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACrB,kBAACL,EAAA,EAAMM,MAAP,uBAEJ,kBAACN,EAAA,EAAMO,KAAP,KACI,kBAAClC,EAAA,EAAD,CAAMiK,YAAahL,EAAUgB,SAjBxB,SAACd,GACdA,EAAIS,iBACJ,IAAM9C,EAAOoP,EAAY9E,QAAQ3K,MAC7B/B,OAAOC,KAAKmR,IAASpP,SAASI,GAC9BiN,EAAY,uCAGhB+B,GAAQhP,GAAQgP,GAAQxC,IAAiB,CAACxM,KAAM,QAChD4E,EAAYvC,EAAKrC,MAUL,kBAACkD,EAAA,EAAKE,MAAN,CAAYoK,WAAS,EAAC/I,UAAU,kBAC5B,kBAACvB,EAAA,EAAKU,MAAN,oBACA,kBAACwF,GAAA,EAAD,CAAYpF,UAAU,QAClB,kBAAC8C,EAAA,EAAD,CAAapD,UAAwB,KAAbvB,EAAiBiF,IAAKgI,EAAa5C,aAAcA,EAAczF,YAAY,gBACnG,kBAACqC,GAAA,EAAWC,OAAZ,KACI,kBAACtF,EAAA,EAAD,CAAQtD,KAAK,UAAb,WAEJ,kBAACyC,EAAA,EAAKW,QAAQC,SAAd,CAAuBrD,KAAK,WACvB0B,SASZkN,G,kDAEjB,WAAYlI,GAAQ,IAAD,8BACf,cAAMA,IAUVkD,kBAAoB,WAChB,EAAKiF,UAAU,EAAKrN,MAAMsN,SAZX,EAenBD,UAAY,SAACC,GACT,IAAMC,EAASR,GAAQO,GACvB,EAAKvF,OAAOM,QAAQC,WAAWC,IAAIgF,GACnC,EAAK7M,SAAS,CAAE4M,YAlBD,EAqBnB1B,qBAAuB,SAACpI,GACpB,IAAIqI,EAASrI,EACTA,EAAMlD,SACNuL,EAASrI,EAAMlD,OAAO5C,OAE1B,IAAI8P,EAAiB,GACN,QAAX3B,EACA2B,EAAc,MAAW,EACP,SAAX3B,GACP2B,EAAc,MAAW,EACzBA,EAAc,aAAmB,EAAKxN,MAAMsN,QAC1B,WAAXzB,GACP,EAAKnL,SAAS,CAAE4M,OAAQ,SAE5B,EAAK5M,SAAS,CAAE8M,oBAnCD,EAsCnBC,cAAgB,SAACjK,GACb,EAAK6J,UAAU7J,EAAMlD,OAAO5C,QAvCb,EA0CnBgE,SAAW,SAACgM,GAAe,IAEnBJ,EACA,EAAKtN,MADLsN,OAEJP,GAAQO,GAAUI,GA9CH,EAiDnBrB,iBAAmB,SAACjM,EAAKrC,GACrB,IAAMwP,EAASR,GAAQhP,GACvB,EAAKgK,OAAOM,QAAQC,WAAWC,IAAIgF,GACnC,EAAK7M,SAAS,CACV4M,OAAQvP,EACRyP,eAAgB,QAtDL,EA0DnBG,MAAQ,WAAO,IAEPL,EACA,EAAKtN,MADLsN,OAEEC,EAASR,GAAQO,GACVvR,OAAOC,GAAGsR,OAAOC,GACvBK,OAhEQ,EAmEnBlF,WAAa,SAACC,GAAU,IAEhB2E,EACA,EAAKtN,MADLsN,OAEJ,OAAIN,GAAgBrP,SAAS2P,IACA,SAAlB3E,EAAI,OAtEf,EAAKZ,OAASsB,sBACd,EAAKrJ,MAAQ,CACTsN,OAAQ,OACRE,eAAgB,MAEpBzR,OAAOgM,OAAS,EAAKA,OACrB,EAAKmE,OAAS,GARC,E,qDA6ET,IAAD,SAIDlL,KAAKhB,MAFLsN,EAFC,EAEDA,OACAE,EAHC,EAGDA,eAGJ,OACI,kBAACpK,EAAA,EAAD,CAAW3H,MAAO,CAAE+J,OAAQ,SACxB,kBAAC,GAAD,eACI7C,YAAa3B,KAAKqL,kBACdmB,IAER,kBAAC7D,EAAA,EAAD,KACI,kBAACxC,GAAA,EAAD,KACI,kBAAClG,EAAA,EAAKW,QAAN,CACIP,GAAG,kBACHoB,GAAG,SACHqC,YAAY,SACZpH,MAAO4P,EACP5L,SAAUV,KAAKyM,eACd9R,OAAOC,KAAKmR,IAASlN,KAAI,SAAA3D,GACtB,OACI,4BACIqQ,IAAKrQ,EACLwB,MAAOxB,GACNA,OAIjB,kBAACsQ,GAAA,EAAD,CAAU/J,GAAI0E,KAAWC,OAAQqF,SAAUzL,KAAK4K,sBAC5C,kBAAC9J,EAAA,EAAD,CAAQ6C,QAAS,SAAA+H,GAAC,OAAI,EAAKd,qBAAqB,SAAhD,OACA,kBAACY,GAAA,EAASG,OAAV,CAAiBC,OAAK,IACtB,kBAACJ,GAAA,EAASK,KAAV,KACI,kBAACL,GAAA,EAASlJ,KAAV,CAAewJ,SAAS,QAAxB,QACA,kBAACN,GAAA,EAASlJ,KAAV,CAAetB,SAAUgL,GAAgBrP,SAAS2P,GAASR,SAAS,UAApE,cAKhB,kBAACnD,EAAA,EAAD,CAAelO,MAAO,CAAE+J,OAAQ,SAC5B,kBAAC,EAAD,CACIL,IAAKnE,KAAK+G,OACVW,WAAY1H,KAAK0H,WACjBhH,SAAUV,KAAKU,YAGvB,kBAACiI,EAAA,EAAD,CAAe5H,UAAU,8BACrB,kBAACD,EAAA,EAAD,CAAQ6C,QAAS3D,KAAK2M,OAAtB,e,GA9HsB1L,IAAMC,WCtC3B2L,I,gEACjB,WAAY3I,GAAQ,IAAD,8BACf,cAAMA,IAYV4I,UAAY,SAACC,GACT,EAAKrN,SAAS,CAAEqN,SAdD,EAiBnBC,OAAS,WAAO,IACJC,EAAW,EAAKjO,MAAhBiO,OACR,EAAKvN,SAAS,CAAEuN,QAASA,KAnBV,EAsBnBC,OAAS,WAAO,IAAD,EAIP,EAAKlO,MAFLiO,EAFO,EAEPA,OACAF,EAHO,EAGPA,IAGJ,OAAIE,EAEI,4BAAQzP,KAAK,SAASuD,UAAU,eAAeV,GAAG,gBAAgBsD,QAAS,EAAKqJ,QAC5E,kBAAC,IAAD,CAAiBG,KAAMC,OAK/B,kBAACrL,EAAA,EAAD,CAAM1B,GAAG,UACL,kBAAC0B,EAAA,EAAKC,OAAN,CAAavH,MAAO,CAAE4S,WAAY,UAC9B,kBAAC5J,EAAA,EAAD,CAAKpB,QAAQ,OAAOiL,UAAWP,EAAKtB,SAAU,EAAKqB,WAC9CnS,OAAOC,KAAK,EAAK2S,MAAM1O,KAAI,SAAA2O,GAAC,OACzB,kBAAC/J,EAAA,EAAInB,KAAL,CAAUiJ,IAAKiC,GACX,kBAAC/J,EAAA,EAAIgK,KAAL,CAAU3B,SAAU0B,GAAIA,OAGhC,kBAAC1M,EAAA,EAAD,CAAQC,UAAU,gBAAgB4C,QAAS,EAAKqJ,OAAQU,aAAW,SAC/D,0BAAMC,cAAY,QAAlB,WAIZ,kBAAC,eAAD,CAAcC,MAAO,IAAKpJ,OAAQ,IAC9BqJ,eAAgB,CAAC,IAAK,KACtBC,eAAgB,CAAC,IAAM,MACtB,EAAKP,KAAKR,MAlDvB,EAAK/N,MAAQ,CACTiO,QAAQ,EACRF,IAAK,QAET,EAAKQ,KAAO,CACR,KAAQ,kBAAC,GAAD,MACR,MAAS,kBAAC,GAAD,MACT,OAAU,kBAAC,GAAD,OATC,E,UADatM,IAAMC,Y,SCbtC6M,GAAW,EAEFC,GAAS,SAAChT,GACnB,IAAID,OAAOC,GAAX,CAGAD,OAAOC,GAAKA,EAEZ,IAAMiT,EAAc,CAChBC,SAAS,EACTC,WAAY,IACZC,oBAAoB,EACpBC,SAAU,SAACnT,EAAGoT,EAAGC,GACbA,EAAMzL,UACP0L,WAAY,SAACtT,EAAGoT,GACf,MAAO,CAACxR,KAAM,CACVuD,GAAItG,IACJgD,KAAM,OAIlB/B,EAAGyT,YAAYR,GAUfjT,EAAGkK,GAAG,OAAO,SAASwG,GACLA,EAAEpM,SACAtE,GAVH,SAAC8B,GACb,IAAM6K,EAAO3M,EAAGqD,IAAH,cACTgH,MAAO,SACJvI,IAEP4R,YAAW,kBAAM/G,EAAK7E,WAAU,KAM5B6L,CAAQ,CACJ7R,KAAM,CACFuD,GAAItG,IACJgD,KAAK,YAAD,OAAcgR,OACnBa,iBAAkB,CACjBpG,EAAGkD,EAAEkD,iBAAiBpG,EACtBqG,EAAGnD,EAAEkD,iBAAiBC,UChC1CC,IAAUC,IAAKN,K,IAEMO,G,kDACjB,aAAc,IAAD,8BACT,gBAMJ/G,SAAW,SAACjN,GACJ,EAAKgE,MAAMhE,KAGfgT,GAAOhT,GACP,EAAK0E,SAAS,CAAC1E,SAVf,EAAKgE,MAAQ,CACThE,GAAI,MAHC,E,qDAeJ,IAEDA,EACAgF,KAAKhB,MADLhE,GAEJ,OACI,oCACI,kBAAC,IAAD,CACIqF,GAAG,OACH4O,WAAYhD,GACZjR,GAAIgF,KAAKiI,SACT7L,SAAU,KAEbpB,GAAM,kBAAC,GAAD,W,GA5BYiG,IAAMC,WCFnCgO,I,qBAAM,WAEV,OACE,yBAAKnO,UAAU,WACb,kBAAC,EAAD,MACA,yBAAKV,GAAG,cACN,kBAAC,GAAD,UAMR8O,IAASjC,OAAO,kBAAC,GAAD,MAAS9P,SAASsF,eAAe,U","file":"static/js/main.61babb81.chunk.js","sourcesContent":["\n/* Node UID generator */\nexport const uuid = () => {\n    return ([1e4] + -1e3).replace(/[018]/g, c => {\n        let exp = crypto.getRandomValues(new Uint8Array(1))[0] & 15;\n        exp = exp >> (c / 4);\n        const val = c ^ exp;\n        return val.toString(16)\n    }\n    );\n}\n\nconst getSelectorIndex = (selector) => {\n    const s = window.cy.style();\n    let i = s.length - 1;\n    Object.values(window.cy.style()).forEach(s => {\n        if (!s.selector){\n            return;\n        }\n        if (s.selector.inputText === selector) {\n            i = s.index;\n        }\n    });\n    return i;\n}\n\nexport const updateSelector = (selector, style) => {\n    let valid = true;\n    Object.keys(style).forEach(k => {\n        const p = window.cy.style().parse(k, style[k]);\n        if (!p){\n            valid = false;\n        }\n    });\n    if (!valid){\n        return;\n    }\n\n    const s = window.cy.style();\n    let i = getSelectorIndex(selector);\n    // Reset style.\n    s[i].properties = [];\n    s[i].mappedProperties = [];\n\n    // Apply new style;\n    const oldLength = s.length;\n    s.length = i + 1;    \n    s.css(style);\n    s.length = oldLength;\n    s._private.newStyle = true;\n\n    return s; // chaining\n};\n\nexport const arrayIntersection = (a, b) => {\n    return a.filter(value => b.includes(value))\n}\n\nexport const objectIntersection = (o1, o2) => {\n    return Object.keys(o1).filter({}.hasOwnProperty.bind(o2));\n}\n\nexport const EH_CLASSES = [\n    'eh-handle',\n    // 'eh-source',\n    // 'eh-target',\n    'eh-preview',\n    // 'eh-hover',\n    'eh-ghost-node',\n    'eh-ghost-edge',\n    'eh-ghost',\n    'eh-presumptive-target',\n    'eh-preview-active']\n\nexport const HIDDEN_SELECTORS = [\n    \".eh-handle\",\n    \".eh-hover\",\n    \".eh-source\",\n    \".eh-target\",\n    \".eh-preview, .eh-ghost-edge\",\n    \".eh-ghost-edge.eh-preview-active\"];\n\nexport const DEFAULT_SELECTORS = [\n    'node',\n    'edge'\n];\n\nconst CLASS_REG = /\\.-?[_a-zA-Z]+[_a-zA-Z0-9-]*\\s*/g;\n\n\nexport const getElements = (selector) => {\n    let elements = window.cy.elements(selector || '');\n    elements = elements.filter(ele => {\n        return arrayIntersection(ele.classes(), EH_CLASSES).length === 0;\n    });\n    return window.cy.collection(elements);\n}\n\n\n// Download a JSON object to a file.\nexport const downloadFile = (data, name) => {\n    const text = JSON.stringify(data, null, 2);\n    const element = document.createElement(\"a\");\n    const file = new Blob(\n        [text], { type: 'text/javascript' });\n    element.href = URL.createObjectURL(file);\n    element.download = name + \".json\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n}\n\nexport const getClassesUnion = (elements) => {\n    let classes = new Set();\n    elements.forEach((ele, i) => {\n        ele.classes().forEach(item => classes.add(item));\n    });\n    return Array.from(classes);\n}\n\nexport const getClassesIntersection = (elements) => {\n    let classes = new Set();\n    elements.forEach((ele, i) => {\n        if (i === 0){\n            classes = new Set(ele.classes());\n        }else{\n            classes = [...classes].filter(x => ele.hasClass(x));\n        }\n    });\n    return Array.from(classes);\n}\nconst EH_NODES = ['.eh-source', '.eh-target', '.eh-hover']\nexport const getClassSuggestions = () => {\n    let allClasses = getClassesUnion(getElements());\n    window.cy.style().json().forEach(s => {\n        const sel = s.selector;\n        if (EH_NODES.includes(sel)){\n            return;\n        }\n        let more = sel.match(CLASS_REG);\n        if (more && more.length > 0) {\n            more = more.map(s => s.substring(1)).filter(s => !EH_CLASSES.includes(s));\n            allClasses = [...allClasses, ...more];\n        }\n    })\n    return allClasses;\n}","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\n\nimport { downloadFile } from '../assets/util';\n\nclass FileImporter extends React.Component {\n    state = {\n        invalid: false,\n        feedback: ''\n    };\n\n    fileSelected = (evt) => {\n        const files = evt.target.files;\n        if (files.length !== 1) {\n            return false;\n        }\n        const file = files[0];\n        console.log(file.name);\n        let data = {};\n        try {\n            data = JSON.parse(file.content);\n        } catch {\n            this.setState({\n                invalid: true,\n                feedback: `Unable to parse ${file.name} as JSON.`\n            });\n            return;\n        }\n        let type = 'elements';\n        if (Array.isArray(data)){\n            if ('selector' in data[0]){\n                type = 'style';\n            }\n        }else{\n            if ('selector' in data){\n                type = 'style';\n            }\n        }\n\n        this.setState({\n            invalid: false,\n            feedback: `Loaded ${file.name} as ${type}`\n        });\n    }\n\n    handleLoad = (evt) => {\n        evt.preventDefault();\n        const form = evt.target.form;\n        window.f = form;\n        console.log(form);\n    }\n\n    render() {\n        const {\n            invalid,\n            feedback\n        } = this.state;\n        return (\n            <Form onSubmit={this.handleLoad}>\n                <Form.Group>\n                    <Form.File id=\"formcheck-api-custom\" custom>\n                        <Form.File.Input\n                            isValid={feedback && !invalid}\n                            isInvalid={invalid}\n                            onChange={this.fileSelected} />\n                        <Form.File.Label>\n                            Import Graph/Style JSON\n                </Form.File.Label>\n                        {feedback &&\n                            <Form.Control.Feedback type={invalid ? \"invalid\" : \"valid\"}>\n                                {feedback}\n                            </Form.Control.Feedback>}\n\n                    </Form.File>\n                </Form.Group>\n                <Button className=\"float-right\" disabled={invalid || !feedback} type=\"submit\">Load</Button>\n            </Form>\n        )\n    }\n}\n\nclass FileExporter extends React.Component {\n    state = {\n        type: 'elements',\n    };\n\n    setType = (type) => {\n        this.setState({type});\n    }\n    setStyle = (style) => {\n        this.setState({style});\n    }\n\n    save = (evt) => {\n        evt.preventDefault();\n        const {\n            type,\n        } = this.state;\n        let data = {};\n        if (type === 'elements'){\n            data = window.cy.elements().json();\n        }else if (type === 'style'){\n            data = window.cy.style().json();\n        }\n        downloadFile(data, type);\n    }\n\n    handleTypeChange = (evt) => {\n        const type = evt.target.value;\n        this.setState({type});\n    }\n\n    render(){\n        return (\n            <Form onSubmit={this.save}>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>Export data</Form.Label>\n                    <Form.Control as=\"select\" name=\"type\" onChange={this.handleTypeChange}>\n                        <option value=\"elements\">Elements</option>\n                        <option value=\"style\">Style</option>\n                    </Form.Control>\n                </Form.Group>\n                <Button className='float-right' type=\"submit\">\n                    Export\n                </Button>\n            </Form>\n        )\n    }\n}\n\nconst FileModal = ({ handleClose }) => {\n    return (\n        <Modal show={true} onHide={handleClose} as={Card}>\n            <Modal.Header as='h4' closeButton>\n                <Modal.Title>Import/Export Graphs and Styles</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                        <FileImporter />\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <FileExporter />\n                    </ListGroup.Item>\n                </ListGroup>\n            </Modal.Body>\n\n        </Modal>\n    )\n}\n\nexport default FileModal;","import React, {useState} from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nimport FileModal from './FileModal'; \n\nconst search = (event) => {\n    event.preventDefault();\n    const query = document.getElementById('query');\n    window.cy.startBatch();\n    window.cy.elements().deselect();\n    window.cy.$(query.value).select()\n    window.cy.fit();\n    window.cy.endBatch();\n}\n\nconst Toolbar = () => {\n    const [fileModalVisible, setFileModalVisible] = useState(false);\n    const toggleFileModal = () => {\n        setFileModalVisible(!fileModalVisible);\n    }\n    \n    return (\n        <>\n        {fileModalVisible && <FileModal handleClose={toggleFileModal}/>}\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand>Graphing</Navbar.Brand>\n            <Nav className=\"mr-auto\" as={ButtonGroup}>\n                <Button variant='toolbar-button' onClick={toggleFileModal}>File</Button>\n                <Button variant='toolbar-button' onClick={() => window.cy.fit()}>Fit</Button>\n            </Nav>\n            <Form inline onSubmit={search}>\n                <FormControl type=\"text\" id='query' placeholder=\"Search\" className=\"mr-sm-2\" />\n            </Form>\n        </Navbar>\n        </>\n    );\n}\n\nexport default Toolbar;","import React from 'react';\nimport {JsonEditor as Editor} from 'jsoneditor-react';\n\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\n\nconst MODES = ['tree', 'view', 'code', 'text', 'form'];\n\nconst JsonEditor = React.forwardRef((props, ref) => {\n    const allowedModes = [...MODES, ...(props.extraModes || [])];\n    return (\n        <Editor\n            ref={ref}\n            ace={ace}\n            allowedModes={allowedModes}\n            htmlElementProps={{style: {height: '100%'}}}\n            theme=\"ace/theme/github\"\n            sortObjectKeys\n            history\n            {...props}\n            />\n    )\n});\n\nexport default JsonEditor;","import React from 'react';\nimport MultiSelect from \"@kenshooui/react-multi-select\";\n\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport {getElements} from '../assets/util';\n\nimport \"@kenshooui/react-multi-select/dist/style.css\"\n\n\nconst elementsToItems = (elements) => {\n    const items = elements.map((ele, i) => {\n        const name = ele.data('name');\n        if (ele.group() === 'edges'){\n            const source = ele.source().data('name');\n            const target = ele.target().data('name');\n            return {\n                id: i, \n                label: `${source} (${name}) ${target}`,\n                group: ele.group(),\n                element: ele\n            }\n        }\n        return {\n            id: i, label: name, group: ele.group(), element: ele\n        }\n    });\n    items.sort((a, b) => a.name > b.name);\n    return items;\n}\n\n\nexport default class ElementSelector extends React.Component {\n    state = {\n        selected: []\n    };\n\n    componentDidMount() {\n        window.cy.on('select unselect', this.selectionChanged);\n    }\n    componentWillUnmount() {\n        window.cy.removeListener('select unselect', this.selectionChanged);\n    }\n\n\n\n    selectionChanged = (event, selected) => {\n        if (selected === undefined){\n            selected = getElements(':selected');\n        }\n        this.setState({selected})\n        this.props.onChange(selected);\n    }\n\n    multiSelectChanged = (selectedItems) => {\n        const elements = window.cy.collection(selectedItems.map(ele => ele.element));\n\n        window.cy.startBatch();\n        window.cy.elements().deselect();\n        elements.select();\n        window.cy.endBatch();\n\n        this.selectionChanged(null, elements);\n    }\n\n    render() {\n        const elements = getElements();\n        const items = elementsToItems(elements);\n        const selectedItems = items.filter(el => el.element.selected())\n        const popover = (\n            <Popover>\n                <Popover.Content>\n                <MultiSelect\n                    items={items}\n                    showSelectedItems={true}\n                    showSelectedItemsSearch={true}\n                    showSearch={true}\n                    showSelectAll={true}\n                    selectedItems={selectedItems}\n                    withGrouping\n                    onChange={this.multiSelectChanged}/>\n                </Popover.Content>\n            </Popover>\n        )\n\n        return (\n            <InputGroup>\n                <FormControl\n                    disabled\n                    placeholder=\"Search\"\n                    value={`${selectedItems.length} elements selected`}\n                />\n                <InputGroup.Append>\n                    <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n                        <Button>Select</Button>\n                    </OverlayTrigger>\n                </InputGroup.Append>\n            </InputGroup>\n        )\n    }\n}\n","import React, { createRef } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport CreatableSelect from 'react-select/creatable';\n\nimport JsonEditor from './JsonEditor';\nimport ElementSelector from './ElementSelector';\nimport { getElements, getClassSuggestions, getClassesIntersection } from '../assets/util';\n\nconst LOCKED_DATA = ['id', 'source', 'target'];\n\nconst autocomplete = {\n    filter: 'contain',\n    trigger: 'focus',\n    caseSensitive: false,\n    getOptions: (text, path, input, editor) => {\n        if (input === 'value') {\n            const field = path[1];\n            let options = new Set();\n            // Add values from other elements.\n            window.cy.elements().forEach(ele => {\n                let s = ele.data(field);\n                console.log(s)\n                if (s && typeof (s) !== 'object') {\n                    options.add(s);\n                }\n            });\n            return Array.from(options);\n        } else if (input === 'field') {\n            let fields = new Set();\n            window.cy.elements().forEach(ele => {\n                Object.keys(ele.data()).forEach(name => fields.add(name));\n            })\n            return Array.from(fields);\n        }\n        return [];\n    }\n}\n\nexport default class DataEditor extends React.Component {\n    /*\n    DataEditor:\n        Select: Subset of nodes, edges (use selected)\n        Editor:\n            - classes as badges\n            - Data json\n    */\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: window.cy.collection()\n        }\n        this.editor = createRef();\n    }\n\n    componentDidMount = () => {\n        const selected = getElements(':selected');\n        const data = selected.map(item => item.data());\n        this.editor.current.jsonEditor.set(data);\n        this.setState({ selected });\n    }\n\n    onJsonChange = () => {\n        const jsons = this.editor.current.jsonEditor.get();\n        jsons.forEach(data => {\n            const ele = window.cy.$('#' + data.id);\n            ele.data(data);\n        })\n    }\n\n    onEditable = (node) => {\n        if (node.path && node.path.length === 2) {\n            return !LOCKED_DATA.includes(node.field);\n        }\n        return true;\n    }\n\n    onSelectionChange = (selected) => {\n        const data = selected.map(item => item.data());\n        this.editor.current.jsonEditor.set(data);\n        this.setState({ selected });\n    }\n\n    onClassesChange = (newValue) => {\n        const {\n            selected\n        } = this.state;\n        let labels = [];\n        if (newValue) {\n            labels = newValue.map(v => v['value']);\n        }\n        selected.classes(labels)\n        // Force update.\n        this.setState(this.state);\n    }\n\n    onCreate = (newValue) => {\n        const {\n            selected\n        } = this.state;\n        selected.addClass([newValue]);\n        // Force update.\n        this.setState(this.state);\n    }\n\n    classItems = (classes) => {\n        return classes.map(cls => { return { value: cls, label: cls } });\n    }\n\n    render() {\n        const {\n            selected\n        } = this.state;\n        let classSuggestions = getClassSuggestions();\n        let selectedClasses = getClassesIntersection(getElements(':selected'));\n        classSuggestions = this.classItems(classSuggestions);\n        selectedClasses = this.classItems(selectedClasses);\n        return (\n            <ListGroup style={{ height: \"100%\" }}>\n                <ListGroupItem>\n                    <ElementSelector\n                        onChange={this.onSelectionChange} />\n                </ListGroupItem>\n                <ListGroupItem>\n                    <CreatableSelect\n                        isMulti\n                        isDisabled={selected.length === 0}\n                        isClearable\n                        onChange={this.onClassesChange}\n                        onCreateOption={this.onCreate}\n                        options={classSuggestions}\n                        value={selectedClasses}\n                    />\n                </ListGroupItem>\n                <ListGroupItem style={{ height: \"100%\" }}>\n                    <JsonEditor\n                        ref={this.editor}\n                        onEditable={this.onEditable}\n                        onChange={this.onJsonChange}\n                        autocomplete={autocomplete}\n                    />\n                </ListGroupItem>\n            </ListGroup>\n        )\n    }\n}\n","import React, { createRef, useState } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport FormControl from 'react-bootstrap/FormControl';\nimport parse from 'cytoscape/src/selector/parse';\n\nimport JsonEditor from './JsonEditor';\nimport { HIDDEN_SELECTORS, DEFAULT_SELECTORS, updateSelector } from '../assets/util';\n\nlet TYPE_OPTIONS = null;\n\nconst getTypeOptions = (name) => {\n    if (TYPE_OPTIONS === null) {\n        TYPE_OPTIONS = {};\n        window.cy.style().properties.forEach(p => {\n            TYPE_OPTIONS[p.name] = p.type\n        });\n    }\n    return getSuggestions(TYPE_OPTIONS[name]);\n}\n\nconst DEFAULT_COLORS = [\n    'red',\n    'orange',\n    'yellow',\n    'green',\n    'blue',\n    'purple',\n    'white',\n    'black',\n    'pink',\n    'cyan',\n    'magenta',\n    [200, 20, 50, 120],\n    '#0A0A4b'\n]\nconst getSuggestions = (type) => {\n    if (!type) {\n        return []\n    }\n    if (type.enums) {\n        return type.enums;\n    }\n    if (type.number) {\n        return [0]\n    }\n    if (type.color) {\n        return DEFAULT_COLORS;\n    }\n    return []\n}\n\nconst autocompleteStyle = {\n    filter: 'contain',\n    trigger: 'focus',\n    caseSensitive: false,\n    getOptions: (text, path, input, editor) => {\n        if (input === 'value') {\n            const field = path[0];\n            let options = new Set();\n            // Add from default properties.\n            let defaultValue = window.cy.style().getDefaultProperty(field);\n            if (defaultValue !== undefined) {\n                options.add(defaultValue.strValue);\n                options.add(defaultValue.value);\n            }\n            // Add values from types list\n            getTypeOptions(field).forEach(name => options.add(name))\n\n            // Add values from other elements.\n            window.cy.elements().forEach(ele => {\n                options.add(ele.style(field));\n            });\n            return Array.from(options);\n        } else if (input === 'field') {\n            return window.cy.style().propertyNames;\n        }\n        return [];\n    }\n}\n\nconst addStyle = (selector, style) => {\n    let warning = '';\n    if (!parse.parse(selector)) {\n        warning = `'${selector}' is not a valid selector.`;\n    }\n    if (!warning) {\n        window.cy.style().appendFromJson([{ selector, style }]);\n    }\n    return warning;\n}\n\nconst getStyle = (selector) => {\n    const styles = window.cy.style().json().filter(s => s.selector === selector);\n    if (styles.length > 0) {\n        return styles[0].style;\n    }\n    return {};\n}\n\nconst NewSelectorModal = ({ defaultValue, handleClose, show }) => {\n    const selectorInput = createRef();\n    const [feedback, setFeedback] = useState('');\n    const existing = window.cy.style().json().map(s => s.selector);\n\n    const onSubmit = (evt) => {\n        evt.preventDefault();\n        const name = selectorInput.current.value;\n        if (existing.includes(name)) {\n            setFeedback('Error: Style selector already exists.');\n            return;\n        }\n        const style = getStyle(defaultValue);\n        const err = addStyle(name, style);\n        if (err) {\n            setFeedback(`Error: ${err}`);\n        } else {\n            handleClose(evt, name);\n        }\n    }\n\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Create Stylesheet</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form invalidated={feedback} onSubmit={onSubmit}>\n                    <Form.Group autoFocus controlId=\"selector-input\">\n                        <Form.Label>Style selector</Form.Label>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl isInvalid={feedback !== ''} ref={selectorInput} defaultValue={defaultValue} placeholder=\"Selector name\" />\n                            <InputGroup.Append>\n                                <Button type=\"submit\">Create</Button>\n                            </InputGroup.Append>\n                            <Form.Control.Feedback type=\"invalid\">\n                                {feedback}\n                            </Form.Control.Feedback>\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                            Examples: .className, node[height &lt; 100], and\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://js.cytoscape.org/#selectors\">many more</a>\n                        </Form.Text>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n        </Modal>);\n}\n\nexport default class StyleEditor extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.editor = createRef();\n        this.state = {\n            selector: \"node\",\n            newSelectorModal: null\n        };\n        window.editor = this.editor;\n        this.errors = []\n    }\n\n    componentDidMount = () => {\n        this.setSelector(this.state.selector);\n    }\n\n    setSelector = (selector) => {\n        const style = getStyle(selector);\n        this.editor.current.jsonEditor.set(style);\n        this.setState({ selector });\n    }\n\n    handleDropdownAction = (event) => {\n        const {\n            selector\n        } = this.state;\n        let action = event;\n        if (event.target) {\n            action = event.target.value;\n        }\n        let newSelectorModal = {}\n        if (action === 'add') {\n            newSelectorModal['show'] = true;\n        } else if (action === 'copy') {\n            newSelectorModal['show'] = true;\n            newSelectorModal['defaultValue'] = selector;\n        } else if (action === 'delete') {\n            const styles = window.cy.style().json().filter(s => s.selector !== selector);\n            window.cy.style().fromJson(styles).update();\n            this.setState({ selector: 'node' });\n        }\n        this.setState({ newSelectorModal })\n    }\n\n    styleChanged = (event) => {\n        this.setSelector(event.target.value);\n    }\n\n    onChange = (newStyle) => {\n        const {\n            selector\n        } = this.state;\n        if (this.errors.length === 0) {\n            updateSelector(selector, newStyle).update();\n        }\n    }\n\n    onValidate = (json) => {\n        var errors = [];\n\n        Object.keys(json).forEach(k => {\n            const v = window.cy.style().parse(k, json[k]);\n            if (!v) {\n                errors.push({ path: [k], 'message': 'Invalid property.' });\n            }\n        });\n        this.errors = errors;\n        return errors;\n    }\n\n    handleModalClose = (evt, name) => {\n        const style = getStyle(name);\n        this.editor.current.jsonEditor.set(style);\n        this.setState({\n            selector: name,\n            newSelectorModal: null\n        })\n    }\n\n    render() {\n        const {\n            selector,\n            newSelectorModal\n        } = this.state;\n\n        const selectors = window.cy.style().json()\n            .filter(s => !HIDDEN_SELECTORS.includes(s.selector));\n\n        return (\n            <ListGroup style={{ height: \"100%\" }}>\n                <NewSelectorModal\n                    handleClose={this.handleModalClose}\n                    {...newSelectorModal}\n                />\n                <ListGroupItem>\n                    <InputGroup>\n                        <Form.Control\n                            id=\"style-dropdown\"\n                            as=\"select\"\n                            placeholder=\"Style\"\n                            value={selector}\n                            onChange={this.styleChanged}>\n                            {selectors.map(s => {\n                                return (\n                                    <option\n                                        key={s.selector}\n                                        value={s.selector}>\n                                        {s.selector}\n                                    </option>);\n                            })}\n                        </Form.Control>\n                        <Dropdown as={InputGroup.Append} onSelect={this.handleDropdownAction}>\n                            <Button onClick={e => this.handleDropdownAction('add')}>Add</Button>\n                            <Dropdown.Toggle split />\n                            <Dropdown.Menu>\n                                <Dropdown.Item eventKey=\"copy\">Copy</Dropdown.Item>\n                                <Dropdown.Item disabled={DEFAULT_SELECTORS.includes(selector)} eventKey=\"delete\">Delete</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </InputGroup>\n                </ListGroupItem>\n                <ListGroupItem style={{ height: \"100%\" }}>\n                    <JsonEditor\n                        ref={this.editor}\n                        onValidate={this.onValidate}\n                        onChange={this.onChange}\n                        autocomplete={autocompleteStyle}\n                    />\n                </ListGroupItem>\n            </ListGroup>\n        )\n    }\n}\n","\n\nexport const LAYOUTS = {\n  'Grid': { name: 'grid' },\n  'Circle': { name: 'circle' },\n  'Concentric': { name: 'concentric' },\n  'Random': { name: 'random' },\n  'Preset': { name: 'preset' },\n  'Breadthfirst': { name: 'breadthfirst' },\n  'Cose': { name: 'cose' },\n}\n\nexport const DEFAULT_LAYOUTS = [\n  'Grid',\n  'Circle',\n  'Concentric',\n  'Random',\n  'Preset',\n  'Breadthfirst',\n  'Cose'\n]\n\nexport const STYLESHEET = [\n  {\n    selector: 'node',\n    style: {},\n  },\n  {\n    selector: 'edge',\n    style: {\n      'curve-style': 'bezier',\n      'target-arrow-shape': 'triangle'\n    }\n  },\n  {\n    selector: 'node[name]',\n    style: {\n      'content': 'data(name)',\n      'text-valign': 'center'\n    }\n  },\n\n  // some style for the extension\n  {\n    selector: '.eh-handle',\n    style: {\n      'background-color': 'red',\n      'width': 12,\n      'height': 12,\n      'shape': 'ellipse',\n      'overlay-opacity': 0,\n      'border-width': 12, // makes the handle easier to hit\n      'border-opacity': 0\n    }\n  },\n\n  {\n    selector: '.eh-hover',\n    style: {\n      'background-color': 'red'\n    }\n  },\n\n  {\n    selector: '.eh-source',\n    style: {\n      'border-width': 2,\n      'border-color': 'red'\n    }\n  },\n\n  {\n    selector: '.eh-target',\n    style: {\n      'border-width': 2,\n      'border-color': 'red'\n    }\n  },\n\n  {\n    selector: '.eh-preview, .eh-ghost-edge',\n    style: {\n      'background-color': 'red',\n      'line-color': 'red',\n      'target-arrow-color': 'red',\n      'source-arrow-color': 'red'\n    }\n  },\n\n  {\n    selector: '.eh-ghost-edge.eh-preview-active',\n    style: {\n      'opacity': 0\n    }\n  }\n];","import React, { createRef, useState } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport JsonEditor from './JsonEditor';\nimport { LAYOUTS, DEFAULT_LAYOUTS } from '../assets/defaults';\n\n\nconst NewLayoutModal = ({ defaultValue, handleClose, show }) => {\n    const layoutInput = createRef();\n    const [feedback, setFeedback] = useState('');\n\n    const onSubmit = (evt) => {\n        evt.preventDefault();\n        const name = layoutInput.current.value;\n        if (Object.keys(LAYOUTS).includes(name)) {\n            setFeedback('Error: Layout name already exists.');\n            return;\n        }\n        LAYOUTS[name] = LAYOUTS[defaultValue] || {name: 'grid'};\n        handleClose(evt, name);\n    }\n\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Create Layout</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form invalidated={feedback} onSubmit={onSubmit}>\n                    <Form.Group autoFocus controlId=\"selector-input\">\n                        <Form.Label>Layout name</Form.Label>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl isInvalid={feedback !== ''} ref={layoutInput} defaultValue={defaultValue} placeholder=\"Layout name\" />\n                            <InputGroup.Append>\n                                <Button type=\"submit\">Create</Button>\n                            </InputGroup.Append>\n                            <Form.Control.Feedback type=\"invalid\">\n                                {feedback}\n                            </Form.Control.Feedback>\n                        </InputGroup>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n        </Modal>);\n}\n\nexport default class LayoutEditor extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.editor = createRef();\n        this.state = {\n            layout: \"Grid\",\n            newLayoutModal: null\n        };\n        window.editor = this.editor;\n        this.errors = [];\n    }\n\n    componentDidMount = () => {\n        this.setLayout(this.state.layout);\n    }\n\n    setLayout = (layout) => {\n        const params = LAYOUTS[layout];\n        this.editor.current.jsonEditor.set(params);\n        this.setState({ layout });\n    }\n\n    handleDropdownAction = (event) => {\n        let action = event;\n        if (event.target) {\n            action = event.target.value;\n        }\n        let newLayoutModal = {}\n        if (action === 'add') {\n            newLayoutModal['show'] = true;\n        } else if (action === 'copy') {\n            newLayoutModal['show'] = true;\n            newLayoutModal['defaultValue'] = this.state.layout;\n        } else if (action === 'delete') {\n            this.setState({ layout: 'grid' });\n        }\n        this.setState({ newLayoutModal })\n    }\n\n    layoutChanged = (event) => {\n        this.setLayout(event.target.value);\n    }\n\n    onChange = (newLayout) => {\n        const {\n            layout\n        } = this.state;\n        LAYOUTS[layout] = newLayout;\n    }\n\n    handleModalClose = (evt, name) => {\n        const params = LAYOUTS[name];\n        this.editor.current.jsonEditor.set(params);\n        this.setState({\n            layout: name,\n            newLayoutModal: null\n        })\n    }\n\n    apply = () => {\n        const {\n            layout\n        } = this.state;\n        const params = LAYOUTS[layout];\n        let runner = window.cy.layout(params);\n        runner.run();\n    }\n\n    onEditable = (node) => {\n        const {\n            layout\n        } = this.state;\n        if (DEFAULT_LAYOUTS.includes(layout)){\n            return node['field'] !== 'name';\n        }\n        return true;\n    }\n\n    render() {\n        const {\n            layout,\n            newLayoutModal\n        } = this.state;\n\n        return (\n            <ListGroup style={{ height: \"100%\" }}>\n                <NewLayoutModal\n                    handleClose={this.handleModalClose}\n                    {...newLayoutModal}\n                />\n                <ListGroupItem>\n                    <InputGroup>\n                        <Form.Control\n                            id=\"layout-dropdown\"\n                            as=\"select\"\n                            placeholder=\"Layout\"\n                            value={layout}\n                            onChange={this.layoutChanged}>\n                            {Object.keys(LAYOUTS).map(s => {\n                                return (\n                                    <option\n                                        key={s}\n                                        value={s}>\n                                        {s}\n                                    </option>);\n                            })}\n                        </Form.Control>\n                        <Dropdown as={InputGroup.Append} onSelect={this.handleDropdownAction}>\n                            <Button onClick={e => this.handleDropdownAction('add')}>Add</Button>\n                            <Dropdown.Toggle split />\n                            <Dropdown.Menu>\n                                <Dropdown.Item eventKey=\"copy\">Copy</Dropdown.Item>\n                                <Dropdown.Item disabled={DEFAULT_LAYOUTS.includes(layout)} eventKey=\"delete\">Delete</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </InputGroup>\n                </ListGroupItem>\n                <ListGroupItem style={{ height: \"100%\" }}>\n                    <JsonEditor\n                        ref={this.editor}\n                        onEditable={this.onEditable}\n                        onChange={this.onChange}\n                    />\n                </ListGroupItem>\n                <ListGroupItem className=\"d-flex justify-content-end\">\n                    <Button onClick={this.apply}>Apply</Button>\n                </ListGroupItem>\n            </ListGroup>\n        )\n    }\n}\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Nav from 'react-bootstrap/Nav';\nimport { ResizableBox } from 'react-resizable';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\n\nimport DataEditor from './DataEditor';\nimport StyleEditor from './StyleEditor';\nimport LayoutEditor from './LayoutEditor';\n\nimport 'react-resizable/css/styles.css';\nimport 'jsoneditor-react/es/editor.min.css';\n\nexport default class Editor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hidden: false,\n            tab: 'Data'\n        };\n        this.tabs = {\n            'Data': <DataEditor />,\n            'Style': <StyleEditor />,\n            'Layout': <LayoutEditor />,\n        }\n    }\n\n    tabChange = (tab) => {\n        this.setState({ tab })\n    }\n\n    toggle = () => {\n        const { hidden } = this.state;\n        this.setState({ hidden: !hidden });\n    }\n\n    render = () => {\n        const {\n            hidden,\n            tab\n        } = this.state;\n\n        if (hidden) {\n            return (\n                <button type=\"button\" className=\"btn btn-dark\" id=\"editor-button\" onClick={this.toggle}>\n                    <FontAwesomeIcon icon={faCog} />\n                </button>);\n        }\n\n        return (\n            <Card id=\"editor\">\n                <Card.Header style={{ paddingTop: '.1rem' }}>\n                    <Nav variant=\"tabs\" activeKey={tab} onSelect={this.tabChange}>\n                        {Object.keys(this.tabs).map(n => (\n                            <Nav.Item key={n}>\n                                <Nav.Link eventKey={n}>{n}</Nav.Link>\n                            </Nav.Item>\n                        ))}\n                        <Button className=\"close ml-auto\" onClick={this.toggle} aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </Button>\n                    </Nav>\n                </Card.Header>\n                <ResizableBox width={500} height={400}\n                    minConstraints={[350, 300]}\n                    maxConstraints={[1000, 1000]}>\n                    {this.tabs[tab]}\n                </ResizableBox>\n            </Card>\n        )\n    }\n}","import {uuid} from './util';\n\nlet NODE_NUM = 0;\n\nexport const initCy = (cy) => {\n    if (window.cy){\n        return;\n    }\n    window.cy = cy;\n\n    const eh_defaults = {\n        preview: false, // whether to show added edges preview before releasing selection\n        hoverDelay: 150, // time spent hovering over a target node before it is considered selected\n        noEdgeEventsInDraw: true, // set events:no to edges during draws, prevents mouseouts on compounds\n        complete: (s, t, added) => {\n            added.select();\n        }, edgeParams: (s, t) => {\n            return {data: { \n                id: uuid(),\n                name: ''\n            }}\n        }\n    };\n    cy.edgehandles(eh_defaults);\n\n    const addNode = (data) => {\n        const node = cy.add({\n            group: \"nodes\",\n            ...data\n        });\n        setTimeout(() => node.select(), 100);\n    };\n\n    cy.on(\"tap\", function(e) {\n        var target = e.target;\n        if (target === cy){\n            addNode({\n                data: {\n                    id: uuid(),\n                    name: `New Node ${NODE_NUM++}`\n                }, renderedPosition: {\n                    x: e.renderedPosition.x,\n                    y: e.renderedPosition.y\n                }\n            });\n        }\n    });\n}","import React from 'react';\nimport cytoscape from 'cytoscape';\nimport CytoComponent from 'react-cytoscapejs';\nimport edgehandles from 'cytoscape-edgehandles';\n\nimport Editor from './Editor';\n\nimport {initCy} from '../assets/initCy';\nimport {STYLESHEET} from '../assets/defaults';\n\ncytoscape.use( edgehandles );\n\nexport default class Graph extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            cy: null\n        }\n    }\n\n    onCreate = (cy) => {\n        if (this.state.cy){\n            return;\n        }\n        initCy(cy);\n        this.setState({cy});\n    }\n\n    render(){\n        const {\n            cy\n        } = this.state;\n        return (\n            <>\n                <CytoComponent \n                    id=\"cyto\"\n                    stylesheet={STYLESHEET}\n                    cy={this.onCreate}\n                    elements={[]}\n                />\n                {cy && <Editor />}\n            </>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Toolbar from './components/Toolbar';\nimport Graph from './components/Graph';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/variants.css';\nimport './index.css';\n\nconst App = () => {\n\n  return (\n    <div className=\"content\">\n      <Toolbar />\n      <div id=\"cy-wrapper\">\n        <Graph />\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}