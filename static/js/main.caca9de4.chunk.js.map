{"version":3,"sources":["assets/util.js","components/FileModal.jsx","components/Toolbar.jsx","components/JsonEditor.jsx","components/ElementSelector.jsx","components/DataEditor.jsx","components/StyleEditor.jsx","assets/defaults.js","components/LayoutEditor.jsx","components/Editor.jsx","assets/initCy.js","components/Graph.jsx","index.js"],"names":["uuid","id","replace","c","exp","crypto","getRandomValues","Uint8Array","toString","window","cy","$","length","updateSelector","selector","style","valid","Object","keys","forEach","k","parseImpl","s","i","values","inputText","index","getSelectorIndex","properties","mappedProperties","oldLength","css","_private","newStyle","EH_CLASSES","HIDDEN_SELECTORS","DEFAULT_SELECTORS","CLASS_REG","G","filter","ele","a","classes","b","value","includes","downloadFile","data","name","text","JSON","stringify","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","EH_NODES","getClassSuggestions","allClasses","elements","Set","item","add","Array","from","getClassesUnion","json","sel","more","match","map","substring","fit","FileImporter","state","invalid","feedback","fileSelected","evt","files","target","console","log","parse","content","setState","isArray","handleLoad","preventDefault","form","f","this","Form","onSubmit","Group","File","custom","Input","isValid","isInvalid","onChange","Label","Control","Feedback","Button","className","disabled","React","Component","FileExporter","setType","setStyle","save","handleTypeChange","controlId","as","FileModal","handleClose","Modal","show","onHide","Card","Header","closeButton","Title","Body","ListGroup","variant","Item","search","event","query","getElementById","startBatch","deselect","select","endBatch","editOptionSelected","ur","undo","redo","cb","copy","do","Toolbar","useState","fileModalVisible","setFileModalVisible","toggleFileModal","Navbar","bg","Brand","Nav","ButtonGroup","onClick","DropdownButton","title","onSelect","Dropdown","active","eventKey","inline","FormControl","placeholder","MODES","JsonEditor","forwardRef","props","ref","allowedModes","extraModes","ace","htmlElementProps","height","theme","sortObjectKeys","history","ElementSelector","selected","selectionChanged","undefined","multiSelectChanged","selectedItems","collection","on","removeListener","items","group","source","label","sort","elementsToItems","el","popover","Popover","Content","showSelectedItems","showSelectedItemsSearch","showSearch","showSelectAll","withGrouping","InputGroup","Append","OverlayTrigger","trigger","placement","overlay","LOCKED_DATA","autocomplete","caseSensitive","getOptions","path","input","editor","field","options","fields","DataEditor","componentDidMount","current","jsonEditor","set","onJsonChange","get","onEditable","node","onSelectionChange","expandAll","onClassesChange","newValue","labels","v","onCreate","addClass","classItems","cls","createRef","classSuggestions","selectedClasses","x","hasClass","getClassesIntersection","ListGroupItem","isMulti","isDisabled","isClearable","onCreateOption","TYPE_OPTIONS","DEFAULT_COLORS","getSuggestions","enums","number","color","autocompleteStyle","defaultValue","getDefaultProperty","strValue","p","propertyNames","getStyle","styles","NewSelectorModal","selectorInput","setFeedback","existing","invalidated","err","warning","appendFromJson","addStyle","autoFocus","Text","rel","StyleEditor","setSelector","handleDropdownAction","action","newSelectorModal","fromJson","update","styleChanged","onValidate","errors","push","handleModalClose","selectors","key","e","Toggle","split","Menu","LAYOUTS","DEFAULT_LAYOUTS","STYLESHEET","NewLayoutModal","layoutInput","LayoutEditor","setLayout","layout","params","newLayoutModal","layoutChanged","newLayout","doLayout","runner","run","Editor","tabChange","tab","toggle","hidden","render","icon","faCog","paddingTop","activeKey","tabs","n","Link","aria-label","aria-hidden","width","minConstraints","maxConstraints","NODE_NUM","initCy","setFocus","val","focused","cyto","background","_background","unfocusTimeout","clearTimeout","onblur","eh_defaults","preview","hoverDelay","noEdgeEventsInDraw","complete","t","added","edgeParams","edgehandles","setTimeout","addNode","renderedPosition","y","ur_options","actions","undoableDrag","stackSizeLimit","undoRedo","eles","remove","restore","clipboard","Mousetrap","bind","cytoscape","use","jquery","Graph","stylesheet","App","ReactDOM"],"mappings":"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","file":"static/js/main.caca9de4.chunk.js","sourcesContent":["\n/* Node UID generator */\nexport const uuid = () => {\n    const id = ([1e4] + -1e3).replace(/[018]/g, c => {\n        let exp = crypto.getRandomValues(new Uint8Array(1))[0] & 15;\n        exp = exp >> (c / 4);\n        const val = c ^ exp;\n        return val.toString(16)\n    });\n    if (window.cy.$('#' + id).length > 0){\n        return uuid();\n    }\n    return id;\n}\n\nconst getSelectorIndex = (selector) => {\n    const s = window.cy.style();\n    let i = s.length - 1;\n    Object.values(window.cy.style()).forEach(s => {\n        if (!s.selector){\n            return;\n        }\n        if (s.selector.inputText === selector) {\n            i = s.index;\n        }\n    });\n    return i;\n}\n\nexport const updateSelector = (selector, style) => {\n    let valid = true;\n    Object.keys(style).forEach(k => {\n        const p = window.cy.style().parseImpl(k, style[k]);\n        if (!p){\n            valid = false;\n        }\n    });\n    if (!valid){\n        return;\n    }\n\n    const s = window.cy.style();\n    let i = getSelectorIndex(selector);\n    // Reset style.\n    s[i].properties = [];\n    s[i].mappedProperties = [];\n\n    // Apply new style;\n    const oldLength = s.length;\n    s.length = i + 1;    \n    s.css(style);\n    s.length = oldLength;\n    s._private.newStyle = true;\n\n    return s; // chaining\n};\n\nexport const arrayIntersection = (a, b) => {\n    return a.filter(value => b.includes(value))\n}\n\nexport const objectIntersection = (o1, o2) => {\n    return Object.keys(o1).filter({}.hasOwnProperty.bind(o2));\n}\n\nexport const EH_CLASSES = [\n    'eh-handle',\n    // 'eh-source',\n    // 'eh-target',\n    'eh-preview',\n    // 'eh-hover',\n    'eh-ghost-node',\n    'eh-ghost-edge',\n    'eh-ghost',\n    'eh-presumptive-target',\n    'eh-preview-active']\n\nexport const HIDDEN_SELECTORS = [\n    \".eh-handle\",\n    \".eh-hover\",\n    \".eh-source\",\n    \".eh-target\",\n    \".eh-preview, .eh-ghost-edge\",\n    \".eh-ghost-edge.eh-preview-active\"];\n\nexport const DEFAULT_SELECTORS = [\n    'node',\n    'edge'\n];\n\nconst CLASS_REG = /\\.-?[_a-zA-Z]+[_a-zA-Z0-9-]*\\s*/g;\n\nexport const G = (selector) => {\n    return window.cy.$(selector).filter(ele => {\n        return arrayIntersection(ele.classes(), EH_CLASSES).length === 0;\n    })\n}\n\n// Download a JSON object to a file.\nexport const downloadFile = (data, name) => {\n    const text = JSON.stringify(data, null, 2);\n    const element = document.createElement(\"a\");\n    const file = new Blob(\n        [text], { type: 'text/javascript' });\n    element.href = URL.createObjectURL(file);\n    element.download = name + \".json\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n}\n\nexport const getClassesUnion = (elements) => {\n    let classes = new Set();\n    elements.forEach((ele, i) => {\n        ele.classes().forEach(item => classes.add(item));\n    });\n    return Array.from(classes);\n}\n\nexport const getClassesIntersection = (elements) => {\n    let classes = new Set();\n    elements.forEach((ele, i) => {\n        if (i === 0){\n            classes = new Set(ele.classes());\n        }else{\n            classes = [...classes].filter(x => ele.hasClass(x));\n        }\n    });\n    return Array.from(classes);\n}\nconst EH_NODES = ['.eh-source', '.eh-target', '.eh-hover']\nexport const getClassSuggestions = () => {\n    let allClasses = getClassesUnion(G());\n    window.cy.style().json().forEach(s => {\n        const sel = s.selector;\n        if (EH_NODES.includes(sel)){\n            return;\n        }\n        let more = sel.match(CLASS_REG);\n        if (more && more.length > 0) {\n            more = more.map(s => s.substring(1)).filter(s => !EH_CLASSES.includes(s));\n            allClasses = [...allClasses, ...more];\n        }\n    })\n    return allClasses;\n}\n\nexport const fit = (elements) => {\n    if (!elements){\n        window.cy.fit();\n    }else{\n        window.cy.fit(elements);\n    }\n}","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\n\nimport { downloadFile } from '../assets/util';\n\nclass FileImporter extends React.Component {\n    state = {\n        invalid: false,\n        feedback: ''\n    };\n\n    fileSelected = (evt) => {\n        const files = evt.target.files;\n        if (files.length !== 1) {\n            return false;\n        }\n        const file = files[0];\n        console.log(file.name);\n        let data = {};\n        try {\n            data = JSON.parse(file.content);\n        } catch {\n            this.setState({\n                invalid: true,\n                feedback: `Unable to parse ${file.name} as JSON.`\n            });\n            return;\n        }\n        let type = 'elements';\n        if (Array.isArray(data)){\n            if ('selector' in data[0]){\n                type = 'style';\n            }\n        }else{\n            if ('selector' in data){\n                type = 'style';\n            }\n        }\n\n        this.setState({\n            invalid: false,\n            feedback: `Loaded ${file.name} as ${type}`\n        });\n    }\n\n    handleLoad = (evt) => {\n        evt.preventDefault();\n        const form = evt.target.form;\n        window.f = form;\n        console.log(form);\n    }\n\n    render() {\n        const {\n            invalid,\n            feedback\n        } = this.state;\n        return (\n            <Form onSubmit={this.handleLoad}>\n                <Form.Group>\n                    <Form.File id=\"formcheck-api-custom\" custom>\n                        <Form.File.Input\n                            isValid={feedback && !invalid}\n                            isInvalid={invalid}\n                            onChange={this.fileSelected} />\n                        <Form.File.Label>\n                            Import Graph/Style JSON\n                </Form.File.Label>\n                        {feedback &&\n                            <Form.Control.Feedback type={invalid ? \"invalid\" : \"valid\"}>\n                                {feedback}\n                            </Form.Control.Feedback>}\n\n                    </Form.File>\n                </Form.Group>\n                <Button className=\"float-right\" disabled={invalid || !feedback} type=\"submit\">Load</Button>\n            </Form>\n        )\n    }\n}\n\nclass FileExporter extends React.Component {\n    state = {\n        type: 'elements',\n    };\n\n    setType = (type) => {\n        this.setState({type});\n    }\n    setStyle = (style) => {\n        this.setState({style});\n    }\n\n    save = (evt) => {\n        evt.preventDefault();\n        const {\n            type,\n        } = this.state;\n        let data = {};\n        if (type === 'elements'){\n            data = window.cy.elements().json();\n        }else if (type === 'style'){\n            data = window.cy.style().json();\n        }\n        downloadFile(data, type);\n    }\n\n    handleTypeChange = (evt) => {\n        const type = evt.target.value;\n        this.setState({type});\n    }\n\n    render(){\n        return (\n            <Form onSubmit={this.save}>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>Export data</Form.Label>\n                    <Form.Control as=\"select\" name=\"type\" onChange={this.handleTypeChange}>\n                        <option value=\"elements\">Elements</option>\n                        <option value=\"style\">Style</option>\n                    </Form.Control>\n                </Form.Group>\n                <Button className='float-right' type=\"submit\">\n                    Export\n                </Button>\n            </Form>\n        )\n    }\n}\n\nconst FileModal = ({ handleClose }) => {\n    return (\n        <Modal show={true} onHide={handleClose} as={Card}>\n            <Modal.Header as='h4' closeButton>\n                <Modal.Title>Import/Export Graphs and Styles</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                        <FileImporter />\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <FileExporter />\n                    </ListGroup.Item>\n                </ListGroup>\n            </Modal.Body>\n\n        </Modal>\n    )\n}\n\nexport default FileModal;","import React, {useState} from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\nimport FileModal from './FileModal';\n\nimport {fit, G} from '../assets/util';\n\nconst search = (event) => {\n    event.preventDefault();\n    const query = document.getElementById('query');\n    window.cy.startBatch();\n    window.cy.elements().deselect();\n    window.cy.$(query.value).select()\n    fit(G(':selected'));\n    window.cy.endBatch();\n}\n\nconst editOptionSelected = (evt) => {\n    console.log(evt);\n    if (evt === 'undo'){\n        window.ur.undo();\n    }else if (evt === 'redo'){\n        window.ur.redo();\n    } else if (evt === 'copy') {\n        window.cb.copy(G(':selected'));\n    } else if (evt === 'paste') {\n        window.ur.do('paste');\n    } else if (evt === 'delete') {\n        window.ur.do('delete', G(':selected'));\n    }\n}\n\nconst Toolbar = () => {\n    const [fileModalVisible, setFileModalVisible] = useState(false);\n    const toggleFileModal = () => {\n        setFileModalVisible(!fileModalVisible);\n    }\n    \n    return (\n        <>\n        {fileModalVisible && <FileModal handleClose={toggleFileModal}/>}\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href='https://github.com/brettjsettle/ReactGraph'>CyGround</Navbar.Brand>\n            <Nav className=\"mr-auto\" as={ButtonGroup}>\n                <Button variant='toolbar-button' onClick={toggleFileModal}>File</Button>\n                <DropdownButton title=\"Edit\" variant='toolbar-button' id=\"edit-dropdown\" as={ButtonGroup} onSelect={editOptionSelected}>\n                    <Dropdown.Item active={false} eventKey='undo'>Undo</Dropdown.Item>\n                    <Dropdown.Item active={false} eventKey='redo'>Redo</Dropdown.Item>\n                    <Dropdown.Item active={false} eventKey='copy'>Copy</Dropdown.Item>\n                    <Dropdown.Item active={false} eventKey='paste'>Paste</Dropdown.Item>\n                    <Dropdown.Item active={false} eventKey='delete'>Delete</Dropdown.Item>\n                </DropdownButton>\n                <DropdownButton title=\"Fit\" id=\"fit-dropdown\" variant='toolbar-button' as={ButtonGroup}>\n                    <Dropdown.Item active={false} onClick={fit}>Fit All</Dropdown.Item>\n                    <Dropdown.Item active={false} onClick={() => fit(G(':selected'))}>Fit Selected</Dropdown.Item>\n                </DropdownButton>\n            </Nav>\n            <Form inline onSubmit={search}>\n                <FormControl type=\"text\" id='query' placeholder=\"Search\" className=\"mr-sm-2\" />\n            </Form>\n        </Navbar>\n        </>\n    );\n}\n\nexport default Toolbar;","import React from 'react';\nimport {JsonEditor as Editor} from 'jsoneditor-react';\n\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\n\nconst MODES = ['tree', 'view', 'code', 'text', 'form'];\n\nconst JsonEditor = React.forwardRef((props, ref) => {\n    const allowedModes = [...MODES, ...(props.extraModes || [])];\n    return (\n        <Editor\n            ref={ref}\n            ace={ace}\n            allowedModes={allowedModes}\n            htmlElementProps={{style: {height: '100%'}}}\n            theme=\"ace/theme/github\"\n            sortObjectKeys\n            history\n            {...props}\n            />\n    )\n});\n\nexport default JsonEditor;","import React from 'react';\nimport MultiSelect from \"@kenshooui/react-multi-select\";\n\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport {G} from '../assets/util';\n\nimport \"@kenshooui/react-multi-select/dist/style.css\"\n\n\nconst elementsToItems = (elements) => {\n    const items = elements.map((ele, i) => {\n        const name = ele.data('name');\n        if (ele.group() === 'edges'){\n            const source = ele.source().data('name');\n            const target = ele.target().data('name');\n            return {\n                id: i, \n                label: `${source} (${name}) ${target}`,\n                group: ele.group(),\n                element: ele\n            }\n        }\n        return {\n            id: i, label: name, group: ele.group(), element: ele\n        }\n    });\n    items.sort((a, b) => a.name > b.name);\n    return items;\n}\n\n\nexport default class ElementSelector extends React.Component {\n    state = {\n        selected: []\n    };\n\n    componentDidMount() {\n        window.cy.on('select unselect', this.selectionChanged);\n    }\n    componentWillUnmount() {\n        window.cy.removeListener('select unselect', this.selectionChanged);\n    }\n\n    selectionChanged = (event, selected) => {\n        if (selected === undefined){\n            selected = G(':selected');\n        }\n        this.setState({selected})\n        this.props.onChange(selected);\n    }\n\n    multiSelectChanged = (selectedItems) => {\n        const elements = window.cy.collection(selectedItems.map(ele => ele.element));\n\n        window.cy.startBatch();\n        window.cy.elements().deselect();\n        elements.select();\n        window.cy.endBatch();\n\n        this.selectionChanged(null, elements);\n    }\n\n    render() {\n        const elements = G();\n        const items = elementsToItems(elements);\n        const selectedItems = items.filter(el => el.element.selected());\n        const popover = (\n            <Popover>\n                <Popover.Content>\n                <MultiSelect\n                    items={items}\n                    showSelectedItems={true}\n                    showSelectedItemsSearch={true}\n                    showSearch={true}\n                    showSelectAll={true}\n                    selectedItems={selectedItems}\n                    withGrouping\n                    onChange={this.multiSelectChanged}/>\n                </Popover.Content>\n            </Popover>\n        )\n\n        return (\n            <InputGroup>\n                <FormControl\n                    disabled\n                    placeholder=\"Search\"\n                    value={`${selectedItems.length} elements selected`}\n                />\n                <InputGroup.Append>\n                    <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n                        <Button>Select</Button>\n                    </OverlayTrigger>\n                </InputGroup.Append>\n            </InputGroup>\n        )\n    }\n}\n","import React, { createRef } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport CreatableSelect from 'react-select/creatable';\n\nimport JsonEditor from './JsonEditor';\nimport ElementSelector from './ElementSelector';\nimport { G, getClassSuggestions, getClassesIntersection } from '../assets/util';\n\nconst LOCKED_DATA = ['id', 'source', 'target'];\n\nconst autocomplete = {\n    filter: 'contain',\n    trigger: 'focus',\n    caseSensitive: false,\n    getOptions: (text, path, input, editor) => {\n        if (input === 'value') {\n            const field = path[1];\n            let options = new Set();\n            // Add values from other elements.\n            window.cy.elements().forEach(ele => {\n                let s = ele.data(field);\n                if (s && typeof (s) !== 'object') {\n                    options.add(s);\n                }\n            });\n            return Array.from(options);\n        } else if (input === 'field') {\n            let fields = new Set();\n            window.cy.elements().forEach(ele => {\n                Object.keys(ele.data()).forEach(name => fields.add(name));\n            })\n            return Array.from(fields);\n        }\n        return [];\n    }\n}\n\nexport default class DataEditor extends React.Component {\n    /*\n    DataEditor:\n        Select: Subset of nodes, edges (use selected)\n        Editor:\n            - classes as badges\n            - Data json\n    */\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: window.cy.collection()\n        }\n        this.editor = createRef();\n    }\n\n    componentDidMount = () => {\n        let selected = G(':selected');\n        const data = selected.map(item => item.data());\n        this.editor.current.jsonEditor.set(data);\n        this.setState({ selected });\n    }\n\n    onJsonChange = () => {\n        const jsons = this.editor.current.jsonEditor.get();\n        jsons.forEach(data => {\n            const ele = window.cy.$('#' + data.id);\n            ele.data(data);\n        })\n    }\n\n    onEditable = (node) => {\n        if (node.path && node.path.length === 2) {\n            return !LOCKED_DATA.includes(node.field);\n        }\n        return true;\n    }\n\n    onSelectionChange = (selected) => {\n        const data = selected.map(item => item.data());\n        this.editor.current.jsonEditor.set(data);\n        this.editor.current.jsonEditor.expandAll();\n        this.setState({ selected });\n    }\n\n    onClassesChange = (newValue) => {\n        const {\n            selected\n        } = this.state;\n        let labels = [];\n        if (newValue) {\n            labels = newValue.map(v => v['value']);\n        }\n        selected.classes(labels)\n        // Force update.\n        this.setState(this.state);\n    }\n\n    onCreate = (newValue) => {\n        const {\n            selected\n        } = this.state;\n        selected.addClass([newValue]);\n        // Force update.\n        this.setState(this.state);\n    }\n\n    classItems = (classes) => {\n        return classes.map(cls => { return { value: cls, label: cls } });\n    }\n\n    render() {\n        const {\n            selected\n        } = this.state;\n        let classSuggestions = getClassSuggestions();\n        let selectedClasses = getClassesIntersection(G(':selected'));\n        classSuggestions = this.classItems(classSuggestions);\n        selectedClasses = this.classItems(selectedClasses);\n        return (\n            <ListGroup style={{ height: \"100%\" }}>\n                <ListGroupItem>\n                    <ElementSelector\n                        onChange={this.onSelectionChange} />\n                </ListGroupItem>\n                <ListGroupItem>\n                    <CreatableSelect\n                        isMulti\n                        isDisabled={selected.length === 0}\n                        isClearable\n                        onChange={this.onClassesChange}\n                        onCreateOption={this.onCreate}\n                        options={classSuggestions}\n                        value={selectedClasses}\n                    />\n                </ListGroupItem>\n                <ListGroupItem style={{ height: \"100%\" }}>\n                    <JsonEditor\n                        ref={this.editor}\n                        onEditable={this.onEditable}\n                        onChange={this.onJsonChange}\n                        autocomplete={autocomplete}\n                    />\n                </ListGroupItem>\n            </ListGroup>\n        )\n    }\n}\n","import React, { createRef, useState } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport FormControl from 'react-bootstrap/FormControl';\nimport parse from 'cytoscape/src/selector/parse';\n\nimport JsonEditor from './JsonEditor';\nimport { HIDDEN_SELECTORS, DEFAULT_SELECTORS, updateSelector } from '../assets/util';\n\nlet TYPE_OPTIONS = null;\n\nconst getTypeOptions = (name) => {\n    if (TYPE_OPTIONS === null) {\n        TYPE_OPTIONS = {};\n        window.cy.style().properties.forEach(p => {\n            TYPE_OPTIONS[p.name] = p.type\n        });\n    }\n    return getSuggestions(TYPE_OPTIONS[name]);\n}\n\nconst DEFAULT_COLORS = [\n    'red',\n    'orange',\n    'yellow',\n    'green',\n    'blue',\n    'purple',\n    'white',\n    'black',\n    'pink',\n    'cyan',\n    'magenta',\n    [200, 20, 50, 120],\n    '#0A0A4b'\n]\nconst getSuggestions = (type) => {\n    if (!type) {\n        return []\n    }\n    if (type.enums) {\n        return type.enums;\n    }\n    if (type.number) {\n        return [0]\n    }\n    if (type.color) {\n        return DEFAULT_COLORS;\n    }\n    return []\n}\n\nconst autocompleteStyle = {\n    filter: 'contain',\n    trigger: 'focus',\n    caseSensitive: false,\n    getOptions: (text, path, input, editor) => {\n        if (input === 'value') {\n            const field = path[0];\n            let options = new Set();\n            // Add from default properties.\n            let defaultValue = window.cy.style().getDefaultProperty(field);\n            if (defaultValue !== undefined) {\n                options.add(defaultValue.strValue);\n                options.add(defaultValue.value);\n            }\n            // Add values from types list\n            getTypeOptions(field).forEach(name => options.add(name))\n\n            // Add values from other elements.\n            window.cy.elements().forEach(ele => {\n                options.add(ele.style(field));\n            });\n            return Array.from(options);\n        } else if (input === 'field') {\n            return window.cy.style().propertyNames;\n        }\n        return [];\n    }\n}\n\nconst addStyle = (selector, style) => {\n    let warning = '';\n    if (!parse.parse(selector)) {\n        warning = `'${selector}' is not a valid selector.`;\n    }\n    if (!warning) {\n        window.cy.style().appendFromJson([{ selector, style }]);\n    }\n    return warning;\n}\n\nconst getStyle = (selector) => {\n    const styles = window.cy.style().json().filter(s => s.selector === selector);\n    if (styles.length > 0) {\n        return styles[0].style;\n    }\n    return {};\n}\n\nconst NewSelectorModal = ({ defaultValue, handleClose, show }) => {\n    const selectorInput = createRef();\n    const [feedback, setFeedback] = useState('');\n    const existing = window.cy.style().json().map(s => s.selector);\n\n    const onSubmit = (evt) => {\n        evt.preventDefault();\n        const name = selectorInput.current.value;\n        if (existing.includes(name)) {\n            setFeedback('Error: Style selector already exists.');\n            return;\n        }\n        const style = getStyle(defaultValue);\n        const err = addStyle(name, style);\n        if (err) {\n            setFeedback(`Error: ${err}`);\n        } else {\n            handleClose(evt, name);\n        }\n    }\n\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Create Stylesheet</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form invalidated={feedback} onSubmit={onSubmit}>\n                    <Form.Group autoFocus controlId=\"selector-input\">\n                        <Form.Label>Style selector</Form.Label>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl isInvalid={feedback !== ''} ref={selectorInput} defaultValue={defaultValue} placeholder=\"Selector name\" />\n                            <InputGroup.Append>\n                                <Button type=\"submit\">Create</Button>\n                            </InputGroup.Append>\n                            <Form.Control.Feedback type=\"invalid\">\n                                {feedback}\n                            </Form.Control.Feedback>\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                            Examples: .className, node[height &lt; 100], and\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://js.cytoscape.org/#selectors\">many more</a>\n                        </Form.Text>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n        </Modal>);\n}\n\nexport default class StyleEditor extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.editor = createRef();\n        this.state = {\n            selector: \"node\",\n            newSelectorModal: null\n        };\n        window.editor = this.editor;\n        this.errors = []\n    }\n\n    componentDidMount = () => {\n        this.setSelector(this.state.selector);\n    }\n\n    setSelector = (selector) => {\n        const style = getStyle(selector);\n        this.editor.current.jsonEditor.set(style);\n        this.editor.current.jsonEditor.expandAll();\n        this.setState({ selector });\n    }\n\n    handleDropdownAction = (event) => {\n        const {\n            selector\n        } = this.state;\n        let action = event;\n        if (event.target) {\n            action = event.target.value;\n        }\n        let newSelectorModal = {}\n        if (action === 'add') {\n            newSelectorModal['show'] = true;\n        } else if (action === 'copy') {\n            newSelectorModal['show'] = true;\n            newSelectorModal['defaultValue'] = selector;\n        } else if (action === 'delete') {\n            const styles = window.cy.style().json().filter(s => s.selector !== selector);\n            window.cy.style().fromJson(styles).update();\n            this.setState({ selector: 'node' });\n        }\n        this.setState({ newSelectorModal })\n    }\n\n    styleChanged = (event) => {\n        this.setSelector(event.target.value);\n    }\n\n    onChange = (newStyle) => {\n        const {\n            selector\n        } = this.state;\n        updateSelector(selector, newStyle).update();\n    }\n\n    onValidate = (json) => {\n        var errors = [];\n\n        Object.keys(json).forEach(k => {\n            const v = window.cy.style().parseImpl(k, json[k]);\n            if (!v) {\n                errors.push({ path: [k], 'message': 'Invalid property.' });\n            }\n        });\n        this.errors = errors;\n        return errors;\n    }\n\n    handleModalClose = (evt, name) => {\n        const style = getStyle(name);\n        this.editor.current.jsonEditor.set(style);\n        this.setState({\n            selector: name,\n            newSelectorModal: null\n        })\n    }\n\n    render() {\n        const {\n            selector,\n            newSelectorModal\n        } = this.state;\n\n        const selectors = window.cy.style().json()\n            .filter(s => !HIDDEN_SELECTORS.includes(s.selector));\n\n        return (\n            <ListGroup style={{ height: \"100%\" }}>\n                <NewSelectorModal\n                    handleClose={this.handleModalClose}\n                    {...newSelectorModal}\n                />\n                <ListGroupItem>\n                    <InputGroup>\n                        <Form.Control\n                            id=\"style-dropdown\"\n                            as=\"select\"\n                            placeholder=\"Style\"\n                            value={selector}\n                            onChange={this.styleChanged}>\n                            {selectors.map(s => {\n                                return (\n                                    <option\n                                        key={s.selector}\n                                        value={s.selector}>\n                                        {s.selector}\n                                    </option>);\n                            })}\n                        </Form.Control>\n                        <Dropdown as={InputGroup.Append} onSelect={this.handleDropdownAction}>\n                            <Button onClick={e => this.handleDropdownAction('add')}>Add</Button>\n                            <Dropdown.Toggle split />\n                            <Dropdown.Menu>\n                                <Dropdown.Item eventKey=\"copy\">Copy</Dropdown.Item>\n                                <Dropdown.Item disabled={DEFAULT_SELECTORS.includes(selector)} eventKey=\"delete\">Delete</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </InputGroup>\n                </ListGroupItem>\n                <ListGroupItem style={{ height: \"100%\" }}>\n                    <JsonEditor\n                        ref={this.editor}\n                        onValidate={this.onValidate}\n                        onChange={this.onChange}\n                        autocomplete={autocompleteStyle}\n                    />\n                </ListGroupItem>\n            </ListGroup>\n        )\n    }\n}\n","\n\nexport const LAYOUTS = {\n  'Grid': { name: 'grid' },\n  'Circle': { name: 'circle' },\n  'Concentric': { name: 'concentric' },\n  'Random': { name: 'random' },\n  'Preset': { name: 'preset' },\n  'Breadthfirst': { name: 'breadthfirst' },\n  'Cose': { name: 'cose' },\n}\n\nexport const DEFAULT_LAYOUTS = [\n  'Grid',\n  'Circle',\n  'Concentric',\n  'Random',\n  'Preset',\n  'Breadthfirst',\n  'Cose'\n]\n\nexport const STYLESHEET = [\n  {\n    selector: 'node',\n    style: {},\n  },\n  {\n    selector: 'edge',\n    style: {\n      'curve-style': 'bezier',\n      'target-arrow-shape': 'triangle'\n    }\n  },\n  {\n    selector: 'node[name]',\n    style: {\n      'content': 'data(name)',\n      'text-valign': 'center'\n    }\n  },\n\n  // some style for the extension\n  {\n    selector: '.eh-handle',\n    style: {\n      'background-color': 'red',\n      'width': 12,\n      'height': 12,\n      'shape': 'ellipse',\n      'overlay-opacity': 0,\n      'border-width': 12, // makes the handle easier to hit\n      'border-opacity': 0\n    }\n  },\n\n  {\n    selector: '.eh-hover',\n    style: {\n      'background-color': 'red'\n    }\n  },\n\n  {\n    selector: '.eh-source',\n    style: {\n      'border-width': 2,\n      'border-color': 'red'\n    }\n  },\n\n  {\n    selector: '.eh-target',\n    style: {\n      'border-width': 2,\n      'border-color': 'red'\n    }\n  },\n\n  {\n    selector: '.eh-preview, .eh-ghost-edge',\n    style: {\n      'background-color': 'red',\n      'line-color': 'red',\n      'target-arrow-color': 'red',\n      'source-arrow-color': 'red'\n    }\n  },\n\n  {\n    selector: '.eh-ghost-edge.eh-preview-active',\n    style: {\n      'opacity': 0\n    }\n  }\n];","import React, { createRef, useState } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Modal from 'react-bootstrap/Modal';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport JsonEditor from './JsonEditor';\nimport { LAYOUTS, DEFAULT_LAYOUTS } from '../assets/defaults';\nimport { G } from '../assets/util';\n\n\nconst NewLayoutModal = ({ defaultValue, handleClose, show }) => {\n    const layoutInput = createRef();\n    const [feedback, setFeedback] = useState('');\n\n    const onSubmit = (evt) => {\n        evt.preventDefault();\n        const name = layoutInput.current.value;\n        if (Object.keys(LAYOUTS).includes(name)) {\n            setFeedback('Error: Layout name already exists.');\n            return;\n        }\n        LAYOUTS[name] = LAYOUTS[defaultValue] || {name: 'grid'};\n        handleClose(evt, name);\n    }\n\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Create Layout</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form invalidated={feedback} onSubmit={onSubmit}>\n                    <Form.Group autoFocus controlId=\"selector-input\">\n                        <Form.Label>Layout name</Form.Label>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl isInvalid={feedback !== ''} ref={layoutInput} defaultValue={defaultValue} placeholder=\"Layout name\" />\n                            <InputGroup.Append>\n                                <Button type=\"submit\">Create</Button>\n                            </InputGroup.Append>\n                            <Form.Control.Feedback type=\"invalid\">\n                                {feedback}\n                            </Form.Control.Feedback>\n                        </InputGroup>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n        </Modal>);\n}\n\nexport default class LayoutEditor extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.editor = createRef();\n        this.state = {\n            layout: \"Grid\",\n            newLayoutModal: null\n        };\n        window.editor = this.editor;\n        this.errors = [];\n    }\n\n    componentDidMount = () => {\n        this.setLayout(this.state.layout);\n    }\n\n    setLayout = (layout) => {\n        const params = LAYOUTS[layout];\n        this.editor.current.jsonEditor.set(params);\n        this.editor.current.jsonEditor.expandAll();\n        this.setState({ layout });\n    }\n\n    handleDropdownAction = (event) => {\n        let action = event;\n        if (event.target) {\n            action = event.target.value;\n        }\n        let newLayoutModal = {}\n        if (action === 'add') {\n            newLayoutModal['show'] = true;\n        } else if (action === 'copy') {\n            newLayoutModal['show'] = true;\n            newLayoutModal['defaultValue'] = this.state.layout;\n        } else if (action === 'delete') {\n            this.setState({ layout: 'grid' });\n        }\n        this.setState({ newLayoutModal })\n    }\n\n    layoutChanged = (event) => {\n        this.setLayout(event.target.value);\n    }\n\n    onChange = (newLayout) => {\n        const {\n            layout\n        } = this.state;\n        LAYOUTS[layout] = newLayout;\n    }\n\n    handleModalClose = (evt, name) => {\n        const params = LAYOUTS[name];\n        this.editor.current.jsonEditor.set(params);\n        this.setState({\n            layout: name,\n            newLayoutModal: null\n        })\n    }\n\n    doLayout = (selected = false) => {\n        const {\n            layout\n        } = this.state;\n        const params = LAYOUTS[layout];\n        let elements = G(selected ? ':selected' : '');\n        let runner = elements.layout(params);\n        runner.run();\n    }\n\n    onEditable = (node) => {\n        const {\n            layout\n        } = this.state;\n        if (DEFAULT_LAYOUTS.includes(layout)){\n            return node['field'] !== 'name';\n        }\n        return true;\n    }\n\n    render() {\n        const {\n            layout,\n            newLayoutModal\n        } = this.state;\n\n        return (\n            <ListGroup style={{ height: \"100%\" }}>\n                <NewLayoutModal\n                    handleClose={this.handleModalClose}\n                    {...newLayoutModal}\n                />\n                <ListGroupItem>\n                    <InputGroup>\n                        <Form.Control\n                            id=\"layout-dropdown\"\n                            as=\"select\"\n                            placeholder=\"Layout\"\n                            value={layout}\n                            onChange={this.layoutChanged}>\n                            {Object.keys(LAYOUTS).map(s => {\n                                return (\n                                    <option\n                                        key={s}\n                                        value={s}>\n                                        {s}\n                                    </option>);\n                            })}\n                        </Form.Control>\n                        <Dropdown as={InputGroup.Append} onSelect={this.handleDropdownAction}>\n                            <Button onClick={e => this.handleDropdownAction('add')}>Add</Button>\n                            <Dropdown.Toggle split />\n                            <Dropdown.Menu>\n                                <Dropdown.Item eventKey=\"copy\">Copy</Dropdown.Item>\n                                <Dropdown.Item disabled={DEFAULT_LAYOUTS.includes(layout)} eventKey=\"delete\">Delete</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </InputGroup>\n                </ListGroupItem>\n                <ListGroupItem style={{ height: \"100%\" }}>\n                    <JsonEditor\n                        ref={this.editor}\n                        onEditable={this.onEditable}\n                        onChange={this.onChange}\n                    />\n                </ListGroupItem>\n                <ListGroupItem className=\"d-flex justify-content-end\">\n                    <ButtonGroup>\n                        <Button onClick={() => this.doLayout(true)}>Layout Selected</Button>\n                        <Button onClick={() => this.doLayout(false)}>Layout All</Button>\n                    </ButtonGroup>\n                </ListGroupItem>\n            </ListGroup>\n        )\n    }\n}\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Nav from 'react-bootstrap/Nav';\nimport { ResizableBox } from 'react-resizable';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\n\nimport DataEditor from './DataEditor';\nimport StyleEditor from './StyleEditor';\nimport LayoutEditor from './LayoutEditor';\n\nimport 'react-resizable/css/styles.css';\nimport 'jsoneditor-react/es/editor.min.css';\n\nexport default class Editor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hidden: false,\n            tab: 'Data'\n        };\n        this.tabs = {\n            'Data': <DataEditor />,\n            'Style': <StyleEditor />,\n            'Layout': <LayoutEditor />,\n        }\n    }\n\n    tabChange = (tab) => {\n        this.setState({ tab })\n    }\n\n    toggle = () => {\n        const { hidden } = this.state;\n        this.setState({ hidden: !hidden });\n    }\n\n    render = () => {\n        const {\n            hidden,\n            tab\n        } = this.state;\n\n        if (hidden) {\n            return (\n                <button type=\"button\" className=\"btn btn-dark\" id=\"editor-button\" onClick={this.toggle}>\n                    <FontAwesomeIcon icon={faCog} />\n                </button>);\n        }\n\n        return (\n            <Card id=\"editor\">\n                <Card.Header style={{ paddingTop: '.1rem' }}>\n                    <Nav variant=\"tabs\" activeKey={tab} onSelect={this.tabChange}>\n                        {Object.keys(this.tabs).map(n => (\n                            <Nav.Item key={n}>\n                                <Nav.Link eventKey={n}>{n}</Nav.Link>\n                            </Nav.Item>\n                        ))}\n                        <Button className=\"close ml-auto\" onClick={this.toggle} aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </Button>\n                    </Nav>\n                </Card.Header>\n                <ResizableBox width={500} height={400}\n                    minConstraints={[350, 300]}\n                    maxConstraints={[1000, 1000]}>\n                    {this.tabs[tab]}\n                </ResizableBox>\n            </Card>\n        )\n    }\n}","import {uuid, G} from './util';\nimport Mousetrap from 'mousetrap';\n\nlet NODE_NUM = 0;\n\nexport const initCy = (cy) => {\n    if (window.cy){\n        return;\n    }\n    window.cy = cy;\n\n    cy.setFocus = (val) => {\n        cy.focused = val;\n        const cyto = document.getElementById('cyto');\n        if (val){\n            cyto.style.background = cy._background || '';\n            if (cy.unfocusTimeout){\n                clearTimeout(cy.unfocusTimeout);\n            }\n        }else{\n            cy._background = cyto.style.background;\n            cyto.style.background = 'lightgray';\n        }\n    }\n\n    document.body.onblur = (() => { cy.setFocus(false)})\n\n    const eh_defaults = {\n        preview: false, // whether to show added edges preview before releasing selection\n        hoverDelay: 150, // time spent hovering over a target node before it is considered selected\n        noEdgeEventsInDraw: true, // set events:no to edges during draws, prevents mouseouts on compounds\n        complete: (s, t, added) => {\n            added.select();\n        }, edgeParams: (s, t) => {\n            return {data: { \n                id: uuid(),\n                name: ''\n            }}\n        }\n    };\n    cy.edgehandles(eh_defaults);\n\n    const addNode = (data) => {\n        const node = cy.add({\n            group: \"nodes\",\n            ...data\n        });\n        setTimeout(() => node.select(), 100);\n    };\n\n    cy.on(\"tap\", function(e) {\n        if (!cy.focused){\n            cy.setFocus(true);\n            return;\n        }\n        var target = e.target;\n        if (target === cy){\n            addNode({\n                data: {\n                    id: uuid(),\n                    name: `New Node ${NODE_NUM++}`\n                }, renderedPosition: {\n                    x: e.renderedPosition.x,\n                    y: e.renderedPosition.y\n                }\n            });\n        }\n    });\n\n\n    // UndoRedo setup\n    var ur_options = {\n        actions: {},// actions to be added\n        undoableDrag: true, // Whether dragging nodes are undoable can be a function as well\n        stackSizeLimit: undefined, // Size limit of undo stack, note that the size of redo stack cannot exceed size of undo stack\n    }\n    \n    var ur = cy.undoRedo(ur_options); // Can also be set whenever wanted.\n    window.ur = ur;\n\n    function deleteEles(eles){\n        return eles.remove();\n    }\n    function restoreEles(eles){\n        return eles.restore();\n    }\n    ur.action(\"delete\", deleteEles, restoreEles); // register\n\n    // Clipbaord setup\n    var cb_options = {\n        // Function executed on the collection of elements being copied, before\n        // they are serialized in the clipboard\n        // beforeCopy: function(eles) {},\n        // Function executed on the clipboard just after the elements are copied.\n        // clipboard is of the form: {nodes: json, edges: json}\n        // afterCopy: function(clipboard) {},\n        // Function executed on the clipboard right before elements are pasted,\n        // when they are still in the clipboard.\n        // beforePaste: function(clipboard) {},\n        // Function executed on the collection of pasted elements, after they\n        // are pasted.\n        // afterPaste: function(eles) {}\n    }\n    var cb = cy.clipboard(cb_options);\n    window.cb = cb;\n\n    // Keyboard bindings\n    Mousetrap.bind(['command+c', 'ctrl+c'], function() {\n        cb.copy(G(':selected'));\n        // return false to prevent default browser behavior\n        // and stop event from bubbling\n        return false;\n    });\n    Mousetrap.bind(['command+v', 'ctrl+v'], function() {\n        ur.do('paste');\n        // return false to prevent default browser behavior\n        // and stop event from bubbling\n        return false;\n    });\n    Mousetrap.bind(['command+a', 'ctrl+a'], function() {\n        cy.elements().select();\n        // return false to prevent default browser behavior\n        // and stop event from bubbling\n        return false;\n    });\n    Mousetrap.bind(['delete'], function() {\n        ur.do('delete');\n        // return false to prevent default browser behavior\n        // and stop event from bubbling\n        return false;\n    });\n    \n}","import React from 'react';\nimport cytoscape from 'cytoscape';\nimport CytoComponent from 'react-cytoscapejs';\nimport edgehandles from 'cytoscape-edgehandles';\nimport undoRedo from 'cytoscape-undo-redo';\nimport clipboard from 'cytoscape-clipboard';\nimport jquery from 'jquery';\nimport Editor from './Editor';\n\nimport {initCy} from '../assets/initCy';\nimport {STYLESHEET} from '../assets/defaults';\n\n// Register extensions with cytoscape.\ncytoscape.use( edgehandles );\nundoRedo(cytoscape);\nclipboard( cytoscape, jquery );\n\nexport default class Graph extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            cy: null\n        }\n    }\n\n    onCreate = (cy) => {\n        if (this.state.cy){\n            return;\n        }\n        initCy(cy);\n        this.setState({cy});\n    }\n\n    render(){\n        const {\n            cy\n        } = this.state;\n        return (\n            <>\n                <CytoComponent \n                    id=\"cyto\"\n                    stylesheet={STYLESHEET}\n                    cy={this.onCreate}\n                    elements={[]}\n                />\n                {cy && <Editor />}\n            </>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Toolbar from './components/Toolbar';\nimport Graph from './components/Graph';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/variants.css';\nimport './index.css';\n\nconst App = () => {\n\n  return (\n    <div className=\"content\">\n      <Toolbar />\n      <div id=\"cy-wrapper\">\n        <Graph />\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}